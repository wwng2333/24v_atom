Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    startup_stm32g030xx.o(RESET) refers to startup_stm32g030xx.o(.text) for Reset_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32g030xx.o(RESET) refers to stm32g0xx_it.o(.text.ADC1_IRQHandler) for ADC1_IRQHandler
    startup_stm32g030xx.o(.text) refers to system_stm32g0xx.o(.text.SystemInit) for SystemInit
    startup_stm32g030xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBufferNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text._DoInit) refers to memseta.o(.text) for __aeabi_memclr4
    segger_rtt.o(.text._DoInit) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text._DoInit) refers to segger_rtt.o(.rodata.str1.1) for [Anonymous Symbol]
    segger_rtt.o(.text._DoInit) refers to segger_rtt.o(.bss._acUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text._DoInit) refers to segger_rtt.o(.bss._acDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text._DoInit) refers to segger_rtt.o(.rodata._DoInit._aInitStr) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text._DoInit) refers to segger_rtt.o(.text._DoInit) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock) for SEGGER_RTT_ReadUpBufferNoLock
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Read) refers to segger_rtt.o(.text.SEGGER_RTT_ReadNoLock) for SEGGER_RTT_ReadNoLock
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Read) refers to segger_rtt.o(.text.SEGGER_RTT_Read) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteWithOverwriteNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteSkipNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.text._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.text._WriteBlocking) for _WriteBlocking
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBufferNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text._GetAvailWriteSpace) refers to segger_rtt.o(.text._GetAvailWriteSpace) for [Anonymous Symbol]
    segger_rtt.o(.text._WriteNoCheck) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.ARM.exidx.text._WriteNoCheck) refers to segger_rtt.o(.text._WriteNoCheck) for [Anonymous Symbol]
    segger_rtt.o(.text._WriteBlocking) refers to memcpya.o(.text) for __aeabi_memcpy
    segger_rtt.o(.ARM.exidx.text._WriteBlocking) refers to segger_rtt.o(.text._WriteBlocking) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.text._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.text._WriteBlocking) for _WriteBlocking
    segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock) for SEGGER_RTT_WriteDownBufferNoLock
    segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.text.SEGGER_RTT_WriteNoLock) for SEGGER_RTT_WriteNoLock
    segger_rtt.o(.text.SEGGER_RTT_Write) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Write) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to strlen.o(.text) for strlen
    segger_rtt.o(.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteString) refers to segger_rtt.o(.text.SEGGER_RTT_WriteString) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkipNoLock) refers to segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkip) refers to segger_rtt.o(.text.SEGGER_RTT_PutCharSkip) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutChar) refers to segger_rtt.o(.text.SEGGER_RTT_PutChar) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.text.SEGGER_RTT_Read) for SEGGER_RTT_Read
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetKey) refers to segger_rtt.o(.text.SEGGER_RTT_GetKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_WaitKey) refers to segger_rtt.o(.text.SEGGER_RTT_GetKey) for SEGGER_RTT_GetKey
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WaitKey) refers to segger_rtt.o(.text.SEGGER_RTT_WaitKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasKey) refers to segger_rtt.o(.text.SEGGER_RTT_HasKey) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasData) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasData) refers to segger_rtt.o(.text.SEGGER_RTT_HasData) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_HasDataUp) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasDataUp) refers to segger_rtt.o(.text.SEGGER_RTT_HasDataUp) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsUpBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsDownBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_Init) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Init) refers to segger_rtt.o(.text.SEGGER_RTT_Init) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text._WriteBlocking) for _WriteBlocking
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text._WriteNoCheck) for _WriteNoCheck
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.data._aTerminalId) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.bss._ActiveTerminal) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal) refers to segger_rtt.o(.text.SEGGER_RTT_SetTerminal) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text._DoInit) for _DoInit
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to strlen.o(.text) for strlen
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text._PostTerminalSwitch) for _PostTerminalSwitch
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text._WriteBlocking) for _WriteBlocking
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.bss._ActiveTerminal) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_TerminalOut) refers to segger_rtt.o(.text.SEGGER_RTT_TerminalOut) for [Anonymous Symbol]
    segger_rtt.o(.text._PostTerminalSwitch) refers to segger_rtt.o(.text._WriteBlocking) for _WriteBlocking
    segger_rtt.o(.text._PostTerminalSwitch) refers to segger_rtt.o(.data._aTerminalId) for [Anonymous Symbol]
    segger_rtt.o(.ARM.exidx.text._PostTerminalSwitch) refers to segger_rtt.o(.text._PostTerminalSwitch) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.text._GetAvailWriteSpace) for _GetAvailWriteSpace
    segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetAvailWriteSpace) refers to segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace) for [Anonymous Symbol]
    segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer) refers to segger_rtt.o(.bss._SEGGER_RTT) for _SEGGER_RTT
    segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetBytesInBuffer) refers to segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer) for [Anonymous Symbol]
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text._StoreChar) for _StoreChar
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text._PrintInt) for _PrintInt
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to d2f.o(.text) for __aeabi_d2f
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to ffixi.o(.text) for __aeabi_f2iz
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to fmul.o(.text) for __aeabi_fmul
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to siabs.o(.text) for abs
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to idiv_div0.o(.text) for __aeabi_idivmod
    segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_vprintf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) for [Anonymous Symbol]
    segger_rtt_printf.o(.text._StoreChar) refers to segger_rtt.o(.text.SEGGER_RTT_Write) for SEGGER_RTT_Write
    segger_rtt_printf.o(.ARM.exidx.text._StoreChar) refers to segger_rtt_printf.o(.text._StoreChar) for [Anonymous Symbol]
    segger_rtt_printf.o(.text._PrintInt) refers to idiv_div0.o(.text) for __aeabi_idiv
    segger_rtt_printf.o(.text._PrintInt) refers to segger_rtt_printf.o(.text._StoreChar) for _StoreChar
    segger_rtt_printf.o(.text._PrintInt) refers to segger_rtt_printf.o(.text._PrintUnsigned) for _PrintUnsigned
    segger_rtt_printf.o(.ARM.exidx.text._PrintInt) refers to segger_rtt_printf.o(.text._PrintInt) for [Anonymous Symbol]
    segger_rtt_printf.o(.text._PrintUnsigned) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    segger_rtt_printf.o(.text._PrintUnsigned) refers to segger_rtt_printf.o(.text._StoreChar) for _StoreChar
    segger_rtt_printf.o(.text._PrintUnsigned) refers to segger_rtt_printf.o(.rodata._PrintUnsigned._aV2C) for [Anonymous Symbol]
    segger_rtt_printf.o(.ARM.exidx.text._PrintUnsigned) refers to segger_rtt_printf.o(.text._PrintUnsigned) for [Anonymous Symbol]
    segger_rtt_printf.o(.text.SEGGER_RTT_printf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_vprintf) for SEGGER_RTT_vprintf
    segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_printf) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for [Anonymous Symbol]
    main.o(.text.main) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to adc.o(.text.MX_ADC1_Init) for MX_ADC1_Init
    main.o(.text.main) refers to tim.o(.text.MX_TIM16_Init) for MX_TIM16_Init
    main.o(.text.main) refers to tim.o(.text.MX_TIM1_Init) for MX_TIM1_Init
    main.o(.text.main) refers to segger_rtt.o(.text.SEGGER_RTT_Init) for SEGGER_RTT_Init
    main.o(.text.main) refers to segger_rtt_printf.o(.text.SEGGER_RTT_printf) for SEGGER_RTT_printf
    main.o(.text.main) refers to adc.o(.text.Activate_ADC) for Activate_ADC
    main.o(.text.main) refers to main.o(.text.LL_ADC_REG_StartConversion) for LL_ADC_REG_StartConversion
    main.o(.text.main) refers to tim.o(.text.TIM16_StartPWM) for TIM16_StartPWM
    main.o(.text.main) refers to tim.o(.text.TIM1_StartPWM) for TIM1_StartPWM
    main.o(.text.main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriority) refers to main.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_EnableDomain_SYS) for LL_RCC_PLL_EnableDomain_SYS
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    main.o(.text.SystemClock_Config) refers to stm32g0xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.SystemClock_Config) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_ADC_REG_StartConversion) refers to main.o(.text.LL_ADC_REG_StartConversion) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to main.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to main.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to main.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to main.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to main.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_EnableDomain_SYS) refers to main.o(.text.LL_RCC_PLL_EnableDomain_SYS) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to main.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to main.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to main.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    main.o(.text.stdout_putchar) refers to segger_rtt.o(.text.SEGGER_RTT_PutChar) for SEGGER_RTT_PutChar
    main.o(.ARM.exidx.text.stdout_putchar) refers to main.o(.text.stdout_putchar) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.MX_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to gpio.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    adc.o(.text.MX_ADC1_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    adc.o(.text.MX_ADC1_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for LL_ADC_Init
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_REG_SetSequencerConfigurable) for LL_ADC_REG_SetSequencerConfigurable
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_IsActiveFlag_CCRDY) for LL_ADC_IsActiveFlag_CCRDY
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_ClearFlag_CCRDY) for LL_ADC_ClearFlag_CCRDY
    adc.o(.text.MX_ADC1_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for LL_ADC_REG_Init
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetOverSamplingScope) for LL_ADC_SetOverSamplingScope
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetTriggerFrequencyMode) for LL_ADC_SetTriggerFrequencyMode
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetCommonPathInternalCh) for LL_ADC_SetCommonPathInternalCh
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for LL_ADC_SetSamplingTimeCommonChannels
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_DisableIT_EOC) for LL_ADC_DisableIT_EOC
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_DisableIT_EOS) for LL_ADC_DisableIT_EOS
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_EnableInternalRegulator) for LL_ADC_EnableInternalRegulator
    adc.o(.text.MX_ADC1_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetAnalogWDMonitChannels) for LL_ADC_SetAnalogWDMonitChannels
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_ConfigAnalogWDThresholds) for LL_ADC_ConfigAnalogWDThresholds
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_EnableIT_AWD1) for LL_ADC_EnableIT_AWD1
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_REG_SetSequencerRanks) for LL_ADC_REG_SetSequencerRanks
    adc.o(.text.MX_ADC1_Init) refers to adc.o(.text.LL_ADC_SetChannelSamplingTime) for LL_ADC_SetChannelSamplingTime
    adc.o(.text.MX_ADC1_Init) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    adc.o(.ARM.exidx.text.MX_ADC1_Init) refers to adc.o(.text.MX_ADC1_Init) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to adc.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to adc.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.__NVIC_SetPriority) refers to adc.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to adc.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerConfigurable) refers to adc.o(.text.LL_ADC_REG_SetSequencerConfigurable) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY) refers to adc.o(.text.LL_ADC_IsActiveFlag_CCRDY) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY) refers to adc.o(.text.LL_ADC_ClearFlag_CCRDY) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetOverSamplingScope) refers to adc.o(.text.LL_ADC_SetOverSamplingScope) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetTriggerFrequencyMode) refers to adc.o(.text.LL_ADC_SetTriggerFrequencyMode) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh) refers to adc.o(.text.LL_ADC_SetCommonPathInternalCh) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels) refers to adc.o(.text.LL_ADC_SetSamplingTimeCommonChannels) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_DisableIT_EOC) refers to adc.o(.text.LL_ADC_DisableIT_EOC) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_DisableIT_EOS) refers to adc.o(.text.LL_ADC_DisableIT_EOS) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator) refers to adc.o(.text.LL_ADC_EnableInternalRegulator) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetAnalogWDMonitChannels) refers to adc.o(.text.LL_ADC_SetAnalogWDMonitChannels) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_ConfigAnalogWDThresholds) refers to adc.o(.text.LL_ADC_ConfigAnalogWDThresholds) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD1) refers to adc.o(.text.LL_ADC_EnableIT_AWD1) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks) refers to adc.o(.text.LL_ADC_REG_SetSequencerRanks) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime) refers to adc.o(.text.LL_ADC_SetChannelSamplingTime) for [Anonymous Symbol]
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_EnableInternalRegulator) for LL_ADC_EnableInternalRegulator
    adc.o(.text.Activate_ADC) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_REG_GetDMATransfer) for LL_ADC_REG_GetDMATransfer
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_REG_SetDMATransfer) for LL_ADC_REG_SetDMATransfer
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_StartCalibration) for LL_ADC_StartCalibration
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_IsCalibrationOnGoing) for LL_ADC_IsCalibrationOnGoing
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_Enable) for LL_ADC_Enable
    adc.o(.text.Activate_ADC) refers to adc.o(.text.LL_ADC_IsActiveFlag_ADRDY) for LL_ADC_IsActiveFlag_ADRDY
    adc.o(.text.Activate_ADC) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    adc.o(.ARM.exidx.text.Activate_ADC) refers to adc.o(.text.Activate_ADC) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to adc.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_REG_GetDMATransfer) refers to adc.o(.text.LL_ADC_REG_GetDMATransfer) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_REG_SetDMATransfer) refers to adc.o(.text.LL_ADC_REG_SetDMATransfer) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_StartCalibration) refers to adc.o(.text.LL_ADC_StartCalibration) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing) refers to adc.o(.text.LL_ADC_IsCalibrationOnGoing) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_Enable) refers to adc.o(.text.LL_ADC_Enable) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_ADRDY) refers to adc.o(.text.LL_ADC_IsActiveFlag_ADRDY) for [Anonymous Symbol]
    tim.o(.text.MX_TIM1_Init) refers to memseta.o(.text) for __aeabi_memclr4
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    tim.o(.text.MX_TIM1_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_EnableARRPreload) for LL_TIM_EnableARRPreload
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_SetClockSource) for LL_TIM_SetClockSource
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for LL_TIM_OC_EnablePreload
    tim.o(.text.MX_TIM1_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_OC_DisableFast) for LL_TIM_OC_DisableFast
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for LL_TIM_SetTriggerOutput
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_SetTriggerOutput2) for LL_TIM_SetTriggerOutput2
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for LL_TIM_DisableMasterSlaveMode
    tim.o(.text.MX_TIM1_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for LL_TIM_BDTR_Init
    tim.o(.text.MX_TIM1_Init) refers to tim.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    tim.o(.text.MX_TIM1_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tim.o(.ARM.exidx.text.MX_TIM1_Init) refers to tim.o(.text.MX_TIM1_Init) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_EnableARRPreload) refers to tim.o(.text.LL_TIM_EnableARRPreload) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_SetClockSource) refers to tim.o(.text.LL_TIM_SetClockSource) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast) refers to tim.o(.text.LL_TIM_OC_DisableFast) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput2) refers to tim.o(.text.LL_TIM_SetTriggerOutput2) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock) refers to tim.o(.text.LL_IOP_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.text.MX_TIM16_Init) refers to memseta.o(.text) for __aeabi_memclr4
    tim.o(.text.MX_TIM16_Init) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    tim.o(.text.MX_TIM16_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    tim.o(.text.MX_TIM16_Init) refers to tim.o(.text.LL_TIM_EnableARRPreload) for LL_TIM_EnableARRPreload
    tim.o(.text.MX_TIM16_Init) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for LL_TIM_OC_EnablePreload
    tim.o(.text.MX_TIM16_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    tim.o(.text.MX_TIM16_Init) refers to tim.o(.text.LL_TIM_OC_EnableFast) for LL_TIM_OC_EnableFast
    tim.o(.text.MX_TIM16_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for LL_TIM_BDTR_Init
    tim.o(.text.MX_TIM16_Init) refers to tim.o(.text.LL_IOP_GRP1_EnableClock) for LL_IOP_GRP1_EnableClock
    tim.o(.text.MX_TIM16_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tim.o(.ARM.exidx.text.MX_TIM16_Init) refers to tim.o(.text.MX_TIM16_Init) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnableFast) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnableFast) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_OC_EnableFast) refers to tim.o(.text.LL_TIM_OC_EnableFast) for [Anonymous Symbol]
    tim.o(.text.TIM16_StartPWM) refers to tim.o(.text.LL_TIM_CC_EnableChannel) for LL_TIM_CC_EnableChannel
    tim.o(.text.TIM16_StartPWM) refers to tim.o(.text.LL_TIM_EnableCounter) for LL_TIM_EnableCounter
    tim.o(.text.TIM16_StartPWM) refers to tim.o(.text.LL_TIM_EnableAllOutputs) for LL_TIM_EnableAllOutputs
    tim.o(.ARM.exidx.text.TIM16_StartPWM) refers to tim.o(.text.TIM16_StartPWM) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_CC_EnableChannel) refers to tim.o(.text.LL_TIM_CC_EnableChannel) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_EnableCounter) refers to tim.o(.text.LL_TIM_EnableCounter) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs) refers to tim.o(.text.LL_TIM_EnableAllOutputs) for [Anonymous Symbol]
    tim.o(.text.TIM1_StartPWM) refers to tim.o(.text.LL_TIM_CC_EnableChannel) for LL_TIM_CC_EnableChannel
    tim.o(.text.TIM1_StartPWM) refers to tim.o(.text.LL_TIM_EnableCounter) for LL_TIM_EnableCounter
    tim.o(.text.TIM1_StartPWM) refers to tim.o(.text.LL_TIM_EnableAllOutputs) for LL_TIM_EnableAllOutputs
    tim.o(.ARM.exidx.text.TIM1_StartPWM) refers to tim.o(.text.TIM1_StartPWM) for [Anonymous Symbol]
    tim.o(.text.TIM16_StopPWM) refers to tim.o(.text.LL_TIM_CC_DisableChannel) for LL_TIM_CC_DisableChannel
    tim.o(.text.TIM16_StopPWM) refers to tim.o(.text.LL_TIM_DisableCounter) for LL_TIM_DisableCounter
    tim.o(.text.TIM16_StopPWM) refers to tim.o(.text.LL_TIM_DisableAllOutputs) for LL_TIM_DisableAllOutputs
    tim.o(.ARM.exidx.text.TIM16_StopPWM) refers to tim.o(.text.TIM16_StopPWM) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_CC_DisableChannel) refers to tim.o(.text.LL_TIM_CC_DisableChannel) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableCounter) refers to tim.o(.text.LL_TIM_DisableCounter) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableAllOutputs) refers to tim.o(.text.LL_TIM_DisableAllOutputs) for [Anonymous Symbol]
    tim.o(.text.TIM1_StopPWM) refers to tim.o(.text.LL_TIM_CC_DisableChannel) for LL_TIM_CC_DisableChannel
    tim.o(.text.TIM1_StopPWM) refers to tim.o(.text.LL_TIM_DisableCounter) for LL_TIM_DisableCounter
    tim.o(.text.TIM1_StopPWM) refers to tim.o(.text.LL_TIM_DisableAllOutputs) for LL_TIM_DisableAllOutputs
    tim.o(.ARM.exidx.text.TIM1_StopPWM) refers to tim.o(.text.TIM1_StopPWM) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32g0xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32g0xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32g0xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32g0xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32g0xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_AWD1) for LL_ADC_IsActiveFlag_AWD1
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to tim.o(.text.TIM16_StopPWM) for TIM16_StopPWM
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to tim.o(.text.TIM1_StopPWM) for TIM1_StopPWM
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to stm32g0xx_it.o(.text.LL_ADC_REG_ReadConversionData12) for LL_ADC_REG_ReadConversionData12
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to printfa.o(i.__0printf) for printf
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_EOC) for LL_ADC_IsActiveFlag_EOC
    stm32g0xx_it.o(.text.ADC1_IRQHandler) refers to stm32g0xx_it.o(.rodata.str1.1) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.ADC1_IRQHandler) refers to stm32g0xx_it.o(.text.ADC1_IRQHandler) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_AWD1) refers to stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_AWD1) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_REG_ReadConversionData12) refers to stm32g0xx_it.o(.text.LL_ADC_REG_ReadConversionData12) for [Anonymous Symbol]
    stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_EOC) refers to stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_EOC) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32g0xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32g0xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_InitTick) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32g0xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32g0xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32g0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32g0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_EnableDomain_SYS) for LL_RCC_PLL_EnableDomain_SYS
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32g0xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32g0xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32g0xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32g0xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_EnableDomain_SYS) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_EnableDomain_SYS) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32g0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for LL_EXTI_DisableEvent_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for LL_EXTI_EnableIT_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for LL_EXTI_DisableIT_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for LL_EXTI_EnableEvent_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for LL_EXTI_DisableFallingTrig_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for LL_EXTI_EnableRisingTrig_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for LL_EXTI_DisableRisingTrig_0_31
    stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for LL_EXTI_EnableFallingTrig_0_31
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for [Anonymous Symbol]
    stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for LL_IOP_GRP1_ForceReset
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for LL_IOP_GRP1_ReleaseReset
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset) refers to stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset) refers to stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for LL_GPIO_SetAFPin_0_7
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for LL_GPIO_SetAFPin_8_15
    stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit) refers to stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit) refers to stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_SetCommonClock) for LL_ADC_SetCommonClock
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_SetCommonClock) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_SetCommonClock) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StopConversion) for LL_ADC_REG_StopConversion
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing) for LL_ADC_REG_IsStopConversionOngoing
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Disable) for LL_ADC_Disable
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsDisableOngoing) for LL_ADC_IsDisableOngoing
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsActiveFlag_CCRDY) for LL_ADC_IsActiveFlag_CCRDY
    stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_ClearFlag_CCRDY) for LL_ADC_ClearFlag_CCRDY
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StopConversion) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsStopConversionOngoing) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Disable) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Disable) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsDisableOngoing) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsDisableOngoing) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsActiveFlag_CCRDY) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_ClearFlag_CCRDY) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.text.LL_ADC_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_GetSequencerConfigurable) for LL_ADC_REG_GetSequencerConfigurable
    stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled) for LL_ADC_IsEnabled
    stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_SetSequencerLength) for LL_ADC_REG_SetSequencerLength
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_GetSequencerConfigurable) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_GetSequencerConfigurable) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerLength) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_SetSequencerLength) for [Anonymous Symbol]
    stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit) refers to stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset) for LL_AHB1_GRP1_ForceReset
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset) for LL_AHB1_GRP1_ReleaseReset
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for LL_DMA_SetPeriphRequest
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for LL_DMA_ClearFlag_GI1
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for LL_DMA_ClearFlag_GI2
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for LL_DMA_ClearFlag_GI3
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for LL_DMA_ClearFlag_GI4
    stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for LL_DMA_ClearFlag_GI5
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset) refers to stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset) refers to stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphRequest) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    stm32g0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    stm32g0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    stm32g0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    stm32g0xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest) for LL_DMA_SetPeriphRequest
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) refers to stm32g0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) refers to stm32g0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) refers to stm32g0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.text.LL_DMA_SetDataLength) refers to stm32g0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32g0xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for LL_RCC_GetUSARTClockSource
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for LL_RCC_GetI2CClockSource
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for LL_RCC_GetI2SClockSource
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_I2S1) for LL_RCC_PLL_IsEnabledDomain_I2S1
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) for RCC_PLL_GetFreqDomain_I2S1
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsEnabledDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_I2S1) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for LL_RCC_PLL_GetP
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_I2S1) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for LL_RCC_GetADCClockSource
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_ADC) for LL_RCC_PLL_IsEnabledDomain_ADC
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) for RCC_PLL_GetFreqDomain_ADC
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsEnabledDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_ADC) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for LL_RCC_PLL_GetP
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_ADC) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource) for LL_RCC_GetRTCClockSource
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for LL_RCC_LSI_IsReady
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for LL_RCC_PLL_GetN
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for LL_RCC_PLL_GetDivider
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetR) for LL_RCC_PLL_GetR
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetN) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetR) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetR) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP) refers to stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetP) for [Anonymous Symbol]
    stm32g0xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32g0xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32g0xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for LL_TIM_SetAutoReload
    stm32g0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for LL_TIM_SetPrescaler
    stm32g0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for LL_TIM_SetRepetitionCounter
    stm32g0xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for LL_TIM_GenerateEvent_UPDATE
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC1Config) for OC1Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC2Config) for OC2Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC3Config) for OC3Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC4Config) for OC4Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC5Config) for OC5Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.OC6Config) for OC6Config
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC1Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC1Config) refers to stm32g0xx_ll_tim.o(.text.OC1Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC2Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC2Config) refers to stm32g0xx_ll_tim.o(.text.OC2Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC3Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC3Config) refers to stm32g0xx_ll_tim.o(.text.OC3Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC4Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for LL_TIM_OC_SetCompareCH4
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC4Config) refers to stm32g0xx_ll_tim.o(.text.OC4Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC5Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH5) for LL_TIM_OC_SetCompareCH5
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC5Config) refers to stm32g0xx_ll_tim.o(.text.OC5Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.OC6Config) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH6) for LL_TIM_OC_SetCompareCH6
    stm32g0xx_ll_tim.o(.ARM.exidx.text.OC6Config) refers to stm32g0xx_ll_tim.o(.text.OC6Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.IC1Config) for IC1Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.IC2Config) for IC2Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.IC3Config) for IC3Config
    stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.IC4Config) for IC4Config
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.IC1Config) refers to stm32g0xx_ll_tim.o(.text.IC1Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.IC2Config) refers to stm32g0xx_ll_tim.o(.text.IC2Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.IC3Config) refers to stm32g0xx_ll_tim.o(.text.IC3Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.IC4Config) refers to stm32g0xx_ll_tim.o(.text.IC4Config) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for LL_TIM_SetEncoderMode
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH5) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH5) for [Anonymous Symbol]
    stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH6) refers to stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH6) for [Anonymous Symbol]
    system_stm32g0xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32g0xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32g0xx.o(.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32g0xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    retarget_io.o(.text.fputc) refers to main.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.text.fputc) refers to stdout.o(.data) for __stdout
    retarget_io.o(.ARM.exidx.text.fputc) refers to retarget_io.o(.text.fputc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.fgetc) refers to retarget_io.o(.text.fgetc) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.__backspace) refers to retarget_io.o(.text.__backspace) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to fputs.o(i.fputs) for fputs
    retarget_io.o(.text.__aeabi_assert) refers to idiv_div0.o(.text) for __aeabi_idivmod
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.text.abort) for abort
    retarget_io.o(.text.__aeabi_assert) refers to retarget_io.o(.rodata.str1.1) for [Anonymous Symbol]
    retarget_io.o(.text.__aeabi_assert) refers to stderr.o(.data) for __stderr
    retarget_io.o(.ARM.exidx.text.__aeabi_assert) refers to retarget_io.o(.text.__aeabi_assert) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text.abort) refers to retarget_io.o(.text.abort) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    fputs.o(i.fputs) refers to retarget_io.o(.text.fputc) for fputc
    fputs_e.o(.text) refers to retarget_io.o(.text.fputc) for fputc
    idiv.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget_io.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_stm32g030xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing startup_stm32g030xx.o(HEAP), (512 bytes).
    Removing segger_rtt.o(.text), (0 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadUpBufferNoLock), (308 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBufferNoLock), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text._DoInit), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadNoLock), (308 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ReadUpBuffer), (46 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ReadUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_Read), (46 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Read), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteWithOverwriteNoLock), (280 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteWithOverwriteNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteSkipNoLock), (264 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteSkipNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteDownBufferNoLock), (176 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBufferNoLock), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text._GetAvailWriteSpace), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text._WriteNoCheck), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text._WriteBlocking), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteDownBuffer), (76 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteDownBuffer), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Write), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WriteString), (30 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WriteString), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_PutCharSkipNoLock), (104 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkipNoLock), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_PutCharSkip), (148 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutCharSkip), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_PutChar), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetKey), (46 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_WaitKey), (28 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_WaitKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasKey), (76 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasKey), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasData), (40 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasData), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_HasDataUp), (40 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_HasDataUp), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_AllocDownBuffer), (220 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_AllocUpBuffer), (220 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_AllocUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ConfigUpBuffer), (152 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_ConfigDownBuffer), (152 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_ConfigDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetNameUpBuffer), (108 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetNameDownBuffer), (108 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetNameDownBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetFlagsUpBuffer), (108 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsUpBuffer), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetFlagsDownBuffer), (108 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetFlagsDownBuffer), (8 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_Init), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_SetTerminal), (192 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_SetTerminal), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_TerminalOut), (324 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_TerminalOut), (8 bytes).
    Removing segger_rtt.o(.text._PostTerminalSwitch), (40 bytes).
    Removing segger_rtt.o(.ARM.exidx.text._PostTerminalSwitch), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetAvailWriteSpace), (36 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetAvailWriteSpace), (8 bytes).
    Removing segger_rtt.o(.text.SEGGER_RTT_GetBytesInBuffer), (92 bytes).
    Removing segger_rtt.o(.ARM.exidx.text.SEGGER_RTT_GetBytesInBuffer), (8 bytes).
    Removing segger_rtt.o(.data._aTerminalId), (16 bytes).
    Removing segger_rtt.o(.bss._ActiveTerminal), (1 bytes).
    Removing segger_rtt_printf.o(.text), (0 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_vprintf), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text._StoreChar), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text._PrintInt), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text._PrintUnsigned), (8 bytes).
    Removing segger_rtt_printf.o(.ARM.exidx.text.SEGGER_RTT_printf), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_ADC_REG_StartConversion), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_EnableDomain_SYS), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing main.o(.text.Error_Handler), (14 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.ARM.exidx.text.MX_ADC1_Init), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing adc.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing adc.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerConfigurable), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetOverSamplingScope), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetTriggerFrequencyMode), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetCommonPathInternalCh), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetSamplingTimeCommonChannels), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_DisableIT_EOC), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_DisableIT_EOS), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_EnableInternalRegulator), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetAnalogWDMonitChannels), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_ConfigAnalogWDThresholds), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_EnableIT_AWD1), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerRanks), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_SetChannelSamplingTime), (8 bytes).
    Removing adc.o(.ARM.exidx.text.Activate_ADC), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_REG_GetDMATransfer), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_REG_SetDMATransfer), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_StartCalibration), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_IsCalibrationOnGoing), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_Enable), (8 bytes).
    Removing adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_ADRDY), (8 bytes).
    Removing tim.o(.text), (0 bytes).
    Removing tim.o(.ARM.exidx.text.MX_TIM1_Init), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_EnableARRPreload), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_SetClockSource), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput2), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_IOP_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.ARM.exidx.text.MX_TIM16_Init), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_EnableFast), (8 bytes).
    Removing tim.o(.ARM.exidx.text.TIM16_StartPWM), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_CC_EnableChannel), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_EnableCounter), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_EnableAllOutputs), (8 bytes).
    Removing tim.o(.ARM.exidx.text.TIM1_StartPWM), (8 bytes).
    Removing tim.o(.ARM.exidx.text.TIM16_StopPWM), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_CC_DisableChannel), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableCounter), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableAllOutputs), (8 bytes).
    Removing tim.o(.ARM.exidx.text.TIM1_StopPWM), (8 bytes).
    Removing stm32g0xx_it.o(.text), (0 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.ADC1_IRQHandler), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_AWD1), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_REG_ReadConversionData12), (8 bytes).
    Removing stm32g0xx_it.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_EOC), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text), (0 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_mDelay), (76 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (108 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (36 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (60 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (52 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (192 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (126 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_SetFlashLatency), (180 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_FLASH_SetLatency), (28 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_PLL_EnableDomain_SYS), (20 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_EnableDomain_SYS), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (28 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32g0xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (28 bytes).
    Removing stm32g0xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text), (0 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DeInit), (72 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_Init), (250 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31), (24 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31), (8 bytes).
    Removing stm32g0xx_ll_exti.o(.text.LL_EXTI_StructInit), (28 bytes).
    Removing stm32g0xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_DeInit), (184 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_IOP_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_IOP_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_0_7), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetAFPin_8_15), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing stm32g0xx_ll_gpio.o(.text.LL_GPIO_StructInit), (44 bytes).
    Removing stm32g0xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonDeInit), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonDeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonInit), (60 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsEnabled), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_SetCommonClock), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_SetCommonClock), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_CommonStructInit), (16 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_CommonStructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_DeInit), (364 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StopConversion), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StopConversion), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_REG_IsStopConversionOngoing), (18 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_IsStopConversionOngoing), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_Disable), (28 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Disable), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_IsDisableOngoing), (18 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsDisableOngoing), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_IsActiveFlag_CCRDY), (20 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_IsActiveFlag_CCRDY), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_ClearFlag_CCRDY), (16 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_ClearFlag_CCRDY), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_StructInit), (30 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_Init), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_GetSequencerConfigurable), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_SetSequencerLength), (8 bytes).
    Removing stm32g0xx_ll_adc.o(.text.LL_ADC_REG_StructInit), (40 bytes).
    Removing stm32g0xx_ll_adc.o(.ARM.exidx.text.LL_ADC_REG_StructInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text), (0 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_DeInit), (372 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_AHB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_AHB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphRequest), (68 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphRequest), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1), (14 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2), (14 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3), (16 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4), (16 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5), (16 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_Init), (100 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_ConfigTransfer), (52 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress), (36 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress), (36 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_SetDataLength), (56 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.text.LL_DMA_StructInit), (54 bytes).
    Removing stm32g0xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32g0xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB), (5 bytes).
    Removing stm32g0xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_DeInit), (120 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (32 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_HSE_IsReady), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq), (42 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_GetSystemClockFreq), (100 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq), (44 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq), (40 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockFreq), (144 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetUSARTClockSource), (24 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSARTClockSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_LSE_IsReady), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockFreq), (128 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2CClockSource), (24 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2CClockSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockFreq), (148 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetI2SClockSource), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetI2SClockSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_I2S1), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsEnabledDomain_I2S1), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_I2S1), (104 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_I2S1), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (116 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_IsEnabledDomain_ADC), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsEnabledDomain_ADC), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_ADC), (104 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_ADC), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockFreq), (124 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockFreq), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetRTCClockSource), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_LSI_IsReady), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_LSI_IsReady), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS), (108 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetN), (20 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetN), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetDivider), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetDivider), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetR), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetR), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32g0xx_ll_rcc.o(.text.LL_RCC_PLL_GetP), (16 bytes).
    Removing stm32g0xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetP), (8 bytes).
    Removing stm32g0xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32g0xx_ll_pwr.o(.text.LL_PWR_DeInit), (26 bytes).
    Removing stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text), (0 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_DeInit), (196 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_StructInit), (32 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (42 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC1Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC2Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC3Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC4Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC5Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.OC6Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (30 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_IC_Init), (124 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.IC1Config), (72 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.IC1Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.IC2Config), (76 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.IC2Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.IC3Config), (78 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.IC3Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.IC4Config), (80 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.IC4Config), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (50 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (176 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_SetEncoderMode), (32 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (26 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (208 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (62 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH5), (8 bytes).
    Removing stm32g0xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH6), (8 bytes).
    Removing system_stm32g0xx.o(.text), (0 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32g0xx.o(.text.SystemCoreClockUpdate), (380 bytes).
    Removing system_stm32g0xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32g0xx.o(.rodata.AHBPrescTable), (64 bytes).
    Removing system_stm32g0xx.o(.rodata.APBPrescTable), (32 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing retarget_io.o(.text.fgetc), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing retarget_io.o(.text.__backspace), (12 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing retarget_io.o(.text.__aeabi_assert), (148 bytes).
    Removing retarget_io.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing retarget_io.o(.text.abort), (4 bytes).
    Removing retarget_io.o(.ARM.exidx.text.abort), (8 bytes).
    Removing retarget_io.o(.rodata.str1.1), (39 bytes).

475 unused section(s) (total 14247 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/microlib/stdio/fputs.c           0x00000000   Number         0  fputs_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stderr.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  siabs.o ABSOLUTE
    ../clib/microlib/stdlib/abs.c            0x00000000   Number         0  ilabs.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  ffixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  fmul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    SEGGER_RTT.c                             0x00000000   Number         0  segger_rtt.o ABSOLUTE
    SEGGER_RTT_printf.c                      0x00000000   Number         0  segger_rtt_printf.o ABSOLUTE
    adc.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    startup_stm32g030xx.s                    0x00000000   Number         0  startup_stm32g030xx.o ABSOLUTE
    stm32g0xx_it.c                           0x00000000   Number         0  stm32g0xx_it.o ABSOLUTE
    stm32g0xx_ll_adc.c                       0x00000000   Number         0  stm32g0xx_ll_adc.o ABSOLUTE
    stm32g0xx_ll_dma.c                       0x00000000   Number         0  stm32g0xx_ll_dma.o ABSOLUTE
    stm32g0xx_ll_exti.c                      0x00000000   Number         0  stm32g0xx_ll_exti.o ABSOLUTE
    stm32g0xx_ll_gpio.c                      0x00000000   Number         0  stm32g0xx_ll_gpio.o ABSOLUTE
    stm32g0xx_ll_pwr.c                       0x00000000   Number         0  stm32g0xx_ll_pwr.o ABSOLUTE
    stm32g0xx_ll_rcc.c                       0x00000000   Number         0  stm32g0xx_ll_rcc.o ABSOLUTE
    stm32g0xx_ll_tim.c                       0x00000000   Number         0  stm32g0xx_ll_tim.o ABSOLUTE
    stm32g0xx_ll_utils.c                     0x00000000   Number         0  stm32g0xx_ll_utils.o ABSOLUTE
    system_stm32g0xx.c                       0x00000000   Number         0  system_stm32g0xx.o ABSOLUTE
    tim.c                                    0x00000000   Number         0  tim.o ABSOLUTE
    RESET                                    0x08000000   Section      192  startup_stm32g030xx.o(RESET)
    .ARM.Collect$$$$00000000                 0x080000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x080000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x080000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x080000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x080000c8   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x080000c8   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x080000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x080000d0   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x080000d0   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x080000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x080000d4   Section       28  startup_stm32g030xx.o(.text)
    .text                                    0x080000f0   Section        0  siabs.o(.text)
    .text                                    0x080000f8   Section        0  memcpya.o(.text)
    .text                                    0x0800011c   Section        0  memseta.o(.text)
    .text                                    0x08000140   Section        0  fmul.o(.text)
    .text                                    0x080001ba   Section        0  ffixi.o(.text)
    .text                                    0x080001ec   Section        0  d2f.o(.text)
    .text                                    0x08000224   Section        0  uidiv_div0.o(.text)
    .text                                    0x08000264   Section        0  idiv_div0.o(.text)
    .text                                    0x080002b4   Section        0  uldiv.o(.text)
    .text                                    0x08000314   Section        0  iusefp.o(.text)
    .text                                    0x08000314   Section        0  fepilogue.o(.text)
    .text                                    0x08000398   Section        0  dadd.o(.text)
    .text                                    0x080004fc   Section        0  dmul.o(.text)
    .text                                    0x080005cc   Section        0  ddiv.o(.text)
    .text                                    0x080006bc   Section        0  dfixul.o(.text)
    .text                                    0x080006fc   Section       40  cdrcmple.o(.text)
    .text                                    0x08000724   Section       36  init.o(.text)
    .text                                    0x08000748   Section        0  llshl.o(.text)
    .text                                    0x08000768   Section        0  llushr.o(.text)
    .text                                    0x0800078a   Section        0  llsshr.o(.text)
    .text                                    0x080007b0   Section        0  depilogue.o(.text)
    [Anonymous Symbol]                       0x08000870   Section        0  stm32g0xx_it.o(.text.ADC1_IRQHandler)
    __arm_cp.5_1                             0x080008b8   Number         4  stm32g0xx_it.o(.text.ADC1_IRQHandler)
    __arm_cp.5_2                             0x080008bc   Number         4  stm32g0xx_it.o(.text.ADC1_IRQHandler)
    [Anonymous Symbol]                       0x080008c0   Section        0  adc.o(.text.Activate_ADC)
    __arm_cp.20_0                            0x0800096c   Number         4  adc.o(.text.Activate_ADC)
    __arm_cp.20_1                            0x08000970   Number         4  adc.o(.text.Activate_ADC)
    __arm_cp.20_2                            0x08000974   Number         4  adc.o(.text.Activate_ADC)
    [Anonymous Symbol]                       0x08000978   Section        0  stm32g0xx_it.o(.text.HardFault_Handler)
    LL_ADC_ClearFlag_CCRDY                   0x0800097d   Thumb Code    16  adc.o(.text.LL_ADC_ClearFlag_CCRDY)
    [Anonymous Symbol]                       0x0800097c   Section        0  adc.o(.text.LL_ADC_ClearFlag_CCRDY)
    LL_ADC_ConfigAnalogWDThresholds          0x0800098d   Thumb Code    68  adc.o(.text.LL_ADC_ConfigAnalogWDThresholds)
    [Anonymous Symbol]                       0x0800098c   Section        0  adc.o(.text.LL_ADC_ConfigAnalogWDThresholds)
    __arm_cp.16_0                            0x080009d0   Number         4  adc.o(.text.LL_ADC_ConfigAnalogWDThresholds)
    LL_ADC_DisableIT_EOC                     0x080009d5   Thumb Code    18  adc.o(.text.LL_ADC_DisableIT_EOC)
    [Anonymous Symbol]                       0x080009d4   Section        0  adc.o(.text.LL_ADC_DisableIT_EOC)
    LL_ADC_DisableIT_EOS                     0x080009e7   Thumb Code    18  adc.o(.text.LL_ADC_DisableIT_EOS)
    [Anonymous Symbol]                       0x080009e6   Section        0  adc.o(.text.LL_ADC_DisableIT_EOS)
    LL_ADC_Enable                            0x080009f9   Thumb Code    24  adc.o(.text.LL_ADC_Enable)
    [Anonymous Symbol]                       0x080009f8   Section        0  adc.o(.text.LL_ADC_Enable)
    LL_ADC_EnableIT_AWD1                     0x08000a11   Thumb Code    18  adc.o(.text.LL_ADC_EnableIT_AWD1)
    [Anonymous Symbol]                       0x08000a10   Section        0  adc.o(.text.LL_ADC_EnableIT_AWD1)
    LL_ADC_EnableInternalRegulator           0x08000a25   Thumb Code    28  adc.o(.text.LL_ADC_EnableInternalRegulator)
    [Anonymous Symbol]                       0x08000a24   Section        0  adc.o(.text.LL_ADC_EnableInternalRegulator)
    [Anonymous Symbol]                       0x08000a40   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    __arm_cp.14_0                            0x08000a9c   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    LL_ADC_IsActiveFlag_ADRDY                0x08000aa1   Thumb Code    16  adc.o(.text.LL_ADC_IsActiveFlag_ADRDY)
    [Anonymous Symbol]                       0x08000aa0   Section        0  adc.o(.text.LL_ADC_IsActiveFlag_ADRDY)
    LL_ADC_IsActiveFlag_AWD1                 0x08000ab1   Thumb Code    16  stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_AWD1)
    [Anonymous Symbol]                       0x08000ab0   Section        0  stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_AWD1)
    LL_ADC_IsActiveFlag_CCRDY                0x08000ac1   Thumb Code    20  adc.o(.text.LL_ADC_IsActiveFlag_CCRDY)
    [Anonymous Symbol]                       0x08000ac0   Section        0  adc.o(.text.LL_ADC_IsActiveFlag_CCRDY)
    LL_ADC_IsActiveFlag_EOC                  0x08000ad5   Thumb Code    18  stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_EOC)
    [Anonymous Symbol]                       0x08000ad4   Section        0  stm32g0xx_it.o(.text.LL_ADC_IsActiveFlag_EOC)
    LL_ADC_IsCalibrationOnGoing              0x08000ae7   Thumb Code    20  adc.o(.text.LL_ADC_IsCalibrationOnGoing)
    [Anonymous Symbol]                       0x08000ae6   Section        0  adc.o(.text.LL_ADC_IsCalibrationOnGoing)
    LL_ADC_IsEnabled                         0x08000afb   Thumb Code    16  adc.o(.text.LL_ADC_IsEnabled)
    [Anonymous Symbol]                       0x08000afa   Section        0  adc.o(.text.LL_ADC_IsEnabled)
    LL_ADC_IsEnabled                         0x08000b0b   Thumb Code    16  stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled)
    [Anonymous Symbol]                       0x08000b0a   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_IsEnabled)
    LL_ADC_REG_GetDMATransfer                0x08000b1b   Thumb Code    16  adc.o(.text.LL_ADC_REG_GetDMATransfer)
    [Anonymous Symbol]                       0x08000b1a   Section        0  adc.o(.text.LL_ADC_REG_GetDMATransfer)
    LL_ADC_REG_GetSequencerConfigurable      0x08000b2b   Thumb Code    18  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_GetSequencerConfigurable)
    [Anonymous Symbol]                       0x08000b2a   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_GetSequencerConfigurable)
    [Anonymous Symbol]                       0x08000b3c   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    __arm_cp.16_0                            0x08000c00   Number         4  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    LL_ADC_REG_ReadConversionData12          0x08000c05   Thumb Code    16  stm32g0xx_it.o(.text.LL_ADC_REG_ReadConversionData12)
    [Anonymous Symbol]                       0x08000c04   Section        0  stm32g0xx_it.o(.text.LL_ADC_REG_ReadConversionData12)
    __arm_cp.7_0                             0x08000c14   Number         4  stm32g0xx_it.o(.text.LL_ADC_REG_ReadConversionData12)
    LL_ADC_REG_SetDMATransfer                0x08000c19   Thumb Code    26  adc.o(.text.LL_ADC_REG_SetDMATransfer)
    [Anonymous Symbol]                       0x08000c18   Section        0  adc.o(.text.LL_ADC_REG_SetDMATransfer)
    LL_ADC_REG_SetSequencerConfigurable      0x08000c33   Thumb Code    28  adc.o(.text.LL_ADC_REG_SetSequencerConfigurable)
    [Anonymous Symbol]                       0x08000c32   Section        0  adc.o(.text.LL_ADC_REG_SetSequencerConfigurable)
    LL_ADC_REG_SetSequencerLength            0x08000c4f   Thumb Code    20  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_SetSequencerLength)
    [Anonymous Symbol]                       0x08000c4e   Section        0  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_SetSequencerLength)
    LL_ADC_REG_SetSequencerRanks             0x08000c63   Thumb Code    46  adc.o(.text.LL_ADC_REG_SetSequencerRanks)
    [Anonymous Symbol]                       0x08000c62   Section        0  adc.o(.text.LL_ADC_REG_SetSequencerRanks)
    LL_ADC_REG_StartConversion               0x08000c91   Thumb Code    24  main.o(.text.LL_ADC_REG_StartConversion)
    [Anonymous Symbol]                       0x08000c90   Section        0  main.o(.text.LL_ADC_REG_StartConversion)
    __arm_cp.5_0                             0x08000ca8   Number         4  main.o(.text.LL_ADC_REG_StartConversion)
    LL_ADC_SetAnalogWDMonitChannels          0x08000cad   Thumb Code    76  adc.o(.text.LL_ADC_SetAnalogWDMonitChannels)
    [Anonymous Symbol]                       0x08000cac   Section        0  adc.o(.text.LL_ADC_SetAnalogWDMonitChannels)
    __arm_cp.15_0                            0x08000cf8   Number         4  adc.o(.text.LL_ADC_SetAnalogWDMonitChannels)
    __arm_cp.15_1                            0x08000cfc   Number         4  adc.o(.text.LL_ADC_SetAnalogWDMonitChannels)
    LL_ADC_SetChannelSamplingTime            0x08000d01   Thumb Code    36  adc.o(.text.LL_ADC_SetChannelSamplingTime)
    [Anonymous Symbol]                       0x08000d00   Section        0  adc.o(.text.LL_ADC_SetChannelSamplingTime)
    __arm_cp.19_0                            0x08000d24   Number         4  adc.o(.text.LL_ADC_SetChannelSamplingTime)
    LL_ADC_SetCommonPathInternalCh           0x08000d29   Thumb Code    28  adc.o(.text.LL_ADC_SetCommonPathInternalCh)
    [Anonymous Symbol]                       0x08000d28   Section        0  adc.o(.text.LL_ADC_SetCommonPathInternalCh)
    LL_ADC_SetOverSamplingScope              0x08000d45   Thumb Code    26  adc.o(.text.LL_ADC_SetOverSamplingScope)
    [Anonymous Symbol]                       0x08000d44   Section        0  adc.o(.text.LL_ADC_SetOverSamplingScope)
    LL_ADC_SetSamplingTimeCommonChannels     0x08000d5f   Thumb Code    38  adc.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    [Anonymous Symbol]                       0x08000d5e   Section        0  adc.o(.text.LL_ADC_SetSamplingTimeCommonChannels)
    LL_ADC_SetTriggerFrequencyMode           0x08000d85   Thumb Code    28  adc.o(.text.LL_ADC_SetTriggerFrequencyMode)
    [Anonymous Symbol]                       0x08000d84   Section        0  adc.o(.text.LL_ADC_SetTriggerFrequencyMode)
    LL_ADC_StartCalibration                  0x08000da1   Thumb Code    26  adc.o(.text.LL_ADC_StartCalibration)
    [Anonymous Symbol]                       0x08000da0   Section        0  adc.o(.text.LL_ADC_StartCalibration)
    LL_APB1_GRP1_EnableClock                 0x08000dbd   Thumb Code    28  main.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000dbc   Section        0  main.o(.text.LL_APB1_GRP1_EnableClock)
    __arm_cp.2_0                             0x08000dd8   Number         4  main.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000ddd   Thumb Code    28  main.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000ddc   Section        0  main.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000df9   Thumb Code    28  adc.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000df8   Section        0  adc.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000e15   Thumb Code    28  tim.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000e14   Section        0  tim.o(.text.LL_APB2_GRP1_EnableClock)
    __arm_cp.1_0                             0x08000e30   Number         4  tim.o(.text.LL_APB2_GRP1_EnableClock)
    LL_FLASH_GetLatency                      0x08000e35   Thumb Code    12  main.o(.text.LL_FLASH_GetLatency)
    [Anonymous Symbol]                       0x08000e34   Section        0  main.o(.text.LL_FLASH_GetLatency)
    LL_FLASH_SetLatency                      0x08000e41   Thumb Code    24  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x08000e40   Section        0  main.o(.text.LL_FLASH_SetLatency)
    __arm_cp.6_0                             0x08000e58   Number         4  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x08000e5c   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_ResetOutputPin                   0x08000f15   Thumb Code    16  gpio.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x08000f14   Section        0  gpio.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_SetAFPin_0_7                     0x08000f25   Thumb Code    38  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    [Anonymous Symbol]                       0x08000f24   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_0_7)
    LL_GPIO_SetAFPin_8_15                    0x08000f4b   Thumb Code    40  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    [Anonymous Symbol]                       0x08000f4a   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetAFPin_8_15)
    LL_GPIO_SetPinMode                       0x08000f73   Thumb Code    36  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08000f72   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x08000f97   Thumb Code    30  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x08000f96   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x08000fb5   Thumb Code    36  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x08000fb4   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x08000fd9   Thumb Code    36  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x08000fd8   Section        0  stm32g0xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    LL_IOP_GRP1_EnableClock                  0x08000ffd   Thumb Code    28  gpio.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000ffc   Section        0  gpio.o(.text.LL_IOP_GRP1_EnableClock)
    LL_IOP_GRP1_EnableClock                  0x08001019   Thumb Code    28  adc.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001018   Section        0  adc.o(.text.LL_IOP_GRP1_EnableClock)
    LL_IOP_GRP1_EnableClock                  0x08001035   Thumb Code    28  tim.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001034   Section        0  tim.o(.text.LL_IOP_GRP1_EnableClock)
    __arm_cp.9_0                             0x08001050   Number         4  tim.o(.text.LL_IOP_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001054   Section        0  stm32g0xx_ll_utils.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08001069   Thumb Code    40  stm32g0xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08001068   Section        0  stm32g0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_0                             0x08001090   Number         4  stm32g0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_1                             0x08001094   Number         4  stm32g0xx_ll_utils.o(.text.LL_InitTick)
    __arm_cp.1_2                             0x08001098   Number         4  stm32g0xx_ll_utils.o(.text.LL_InitTick)
    LL_RCC_GetSysClkSource                   0x0800109d   Thumb Code    12  main.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x0800109c   Section        0  main.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_HSI_Enable                        0x080010a9   Thumb Code    16  main.o(.text.LL_RCC_HSI_Enable)
    [Anonymous Symbol]                       0x080010a8   Section        0  main.o(.text.LL_RCC_HSI_Enable)
    LL_RCC_HSI_IsReady                       0x080010b9   Thumb Code    16  main.o(.text.LL_RCC_HSI_IsReady)
    [Anonymous Symbol]                       0x080010b8   Section        0  main.o(.text.LL_RCC_HSI_IsReady)
    LL_RCC_PLL_ConfigDomain_SYS              0x080010c9   Thumb Code    44  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    [Anonymous Symbol]                       0x080010c8   Section        0  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    __arm_cp.10_1                            0x080010f4   Number         4  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    LL_RCC_PLL_Enable                        0x080010f9   Thumb Code    16  main.o(.text.LL_RCC_PLL_Enable)
    [Anonymous Symbol]                       0x080010f8   Section        0  main.o(.text.LL_RCC_PLL_Enable)
    LL_RCC_PLL_EnableDomain_SYS              0x08001109   Thumb Code    16  main.o(.text.LL_RCC_PLL_EnableDomain_SYS)
    [Anonymous Symbol]                       0x08001108   Section        0  main.o(.text.LL_RCC_PLL_EnableDomain_SYS)
    __arm_cp.12_0                            0x08001118   Number         4  main.o(.text.LL_RCC_PLL_EnableDomain_SYS)
    LL_RCC_PLL_IsReady                       0x0800111d   Thumb Code    16  main.o(.text.LL_RCC_PLL_IsReady)
    [Anonymous Symbol]                       0x0800111c   Section        0  main.o(.text.LL_RCC_PLL_IsReady)
    __arm_cp.13_0                            0x0800112c   Number         4  main.o(.text.LL_RCC_PLL_IsReady)
    LL_RCC_SetAHBPrescaler                   0x08001131   Thumb Code    24  main.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08001130   Section        0  main.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08001149   Thumb Code    24  main.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08001148   Section        0  main.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetSysClkSource                   0x08001161   Thumb Code    24  main.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x08001160   Section        0  main.o(.text.LL_RCC_SetSysClkSource)
    __arm_cp.15_0                            0x08001178   Number         4  main.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x0800117c   Section        0  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    __arm_cp.3_0                             0x0800118c   Number         4  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    [Anonymous Symbol]                       0x08001190   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    LL_TIM_CC_DisableChannel                 0x0800126d   Thumb Code    20  tim.o(.text.LL_TIM_CC_DisableChannel)
    [Anonymous Symbol]                       0x0800126c   Section        0  tim.o(.text.LL_TIM_CC_DisableChannel)
    LL_TIM_CC_EnableChannel                  0x08001281   Thumb Code    20  tim.o(.text.LL_TIM_CC_EnableChannel)
    [Anonymous Symbol]                       0x08001280   Section        0  tim.o(.text.LL_TIM_CC_EnableChannel)
    LL_TIM_DisableAllOutputs                 0x08001295   Thumb Code    20  tim.o(.text.LL_TIM_DisableAllOutputs)
    [Anonymous Symbol]                       0x08001294   Section        0  tim.o(.text.LL_TIM_DisableAllOutputs)
    LL_TIM_DisableCounter                    0x080012a9   Thumb Code    18  tim.o(.text.LL_TIM_DisableCounter)
    [Anonymous Symbol]                       0x080012a8   Section        0  tim.o(.text.LL_TIM_DisableCounter)
    LL_TIM_DisableMasterSlaveMode            0x080012bb   Thumb Code    18  tim.o(.text.LL_TIM_DisableMasterSlaveMode)
    [Anonymous Symbol]                       0x080012ba   Section        0  tim.o(.text.LL_TIM_DisableMasterSlaveMode)
    LL_TIM_EnableARRPreload                  0x080012cd   Thumb Code    18  tim.o(.text.LL_TIM_EnableARRPreload)
    [Anonymous Symbol]                       0x080012cc   Section        0  tim.o(.text.LL_TIM_EnableARRPreload)
    LL_TIM_EnableAllOutputs                  0x080012df   Thumb Code    20  tim.o(.text.LL_TIM_EnableAllOutputs)
    [Anonymous Symbol]                       0x080012de   Section        0  tim.o(.text.LL_TIM_EnableAllOutputs)
    LL_TIM_EnableCounter                     0x080012f3   Thumb Code    18  tim.o(.text.LL_TIM_EnableCounter)
    [Anonymous Symbol]                       0x080012f2   Section        0  tim.o(.text.LL_TIM_EnableCounter)
    LL_TIM_GenerateEvent_UPDATE              0x08001305   Thumb Code    18  stm32g0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08001304   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08001318   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_0                             0x080013e0   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_1                             0x080013e4   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_2                             0x080013e8   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_3                             0x080013ec   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    __arm_cp.6_4                             0x080013f0   Number         4  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_DisableFast                    0x080013f5   Thumb Code   224  tim.o(.text.LL_TIM_OC_DisableFast)
    [Anonymous Symbol]                       0x080013f4   Section        0  tim.o(.text.LL_TIM_OC_DisableFast)
    LL_TIM_OC_EnableFast                     0x080014d5   Thumb Code   224  tim.o(.text.LL_TIM_OC_EnableFast)
    [Anonymous Symbol]                       0x080014d4   Section        0  tim.o(.text.LL_TIM_OC_EnableFast)
    LL_TIM_OC_EnablePreload                  0x080015b5   Thumb Code   224  tim.o(.text.LL_TIM_OC_EnablePreload)
    [Anonymous Symbol]                       0x080015b4   Section        0  tim.o(.text.LL_TIM_OC_EnablePreload)
    __arm_cp.4_0                             0x08001694   Number         4  tim.o(.text.LL_TIM_OC_EnablePreload)
    __arm_cp.4_1                             0x08001698   Number         4  tim.o(.text.LL_TIM_OC_EnablePreload)
    [Anonymous Symbol]                       0x0800169c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_TIM_OC_SetCompareCH1                  0x0800174d   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    [Anonymous Symbol]                       0x0800174c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    LL_TIM_OC_SetCompareCH2                  0x0800175d   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    [Anonymous Symbol]                       0x0800175c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    LL_TIM_OC_SetCompareCH3                  0x0800176d   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    [Anonymous Symbol]                       0x0800176c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    LL_TIM_OC_SetCompareCH4                  0x0800177d   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    [Anonymous Symbol]                       0x0800177c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    LL_TIM_OC_SetCompareCH5                  0x0800178d   Thumb Code    20  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH5)
    [Anonymous Symbol]                       0x0800178c   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH5)
    LL_TIM_OC_SetCompareCH6                  0x080017a1   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH6)
    [Anonymous Symbol]                       0x080017a0   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH6)
    LL_TIM_SetAutoReload                     0x080017b1   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    [Anonymous Symbol]                       0x080017b0   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    LL_TIM_SetClockSource                    0x080017c1   Thumb Code    28  tim.o(.text.LL_TIM_SetClockSource)
    [Anonymous Symbol]                       0x080017c0   Section        0  tim.o(.text.LL_TIM_SetClockSource)
    __arm_cp.3_0                             0x080017dc   Number         4  tim.o(.text.LL_TIM_SetClockSource)
    LL_TIM_SetPrescaler                      0x080017e1   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    [Anonymous Symbol]                       0x080017e0   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    LL_TIM_SetRepetitionCounter              0x080017f1   Thumb Code    16  stm32g0xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    [Anonymous Symbol]                       0x080017f0   Section        0  stm32g0xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    LL_TIM_SetTriggerOutput                  0x08001801   Thumb Code    26  tim.o(.text.LL_TIM_SetTriggerOutput)
    [Anonymous Symbol]                       0x08001800   Section        0  tim.o(.text.LL_TIM_SetTriggerOutput)
    LL_TIM_SetTriggerOutput2                 0x0800181b   Thumb Code    28  tim.o(.text.LL_TIM_SetTriggerOutput2)
    [Anonymous Symbol]                       0x0800181a   Section        0  tim.o(.text.LL_TIM_SetTriggerOutput2)
    [Anonymous Symbol]                       0x08001838   Section        0  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_0                             0x080019ac   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_1                             0x080019b0   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_2                             0x080019b4   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_3                             0x080019b8   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_4                             0x080019bc   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_5                             0x080019c0   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_6                             0x080019c4   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_7                             0x080019c8   Number         4  adc.o(.text.MX_ADC1_Init)
    __arm_cp.0_8                             0x080019cc   Number         4  adc.o(.text.MX_ADC1_Init)
    [Anonymous Symbol]                       0x080019d0   Section        0  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x08001a1c   Section        0  tim.o(.text.MX_TIM16_Init)
    [Anonymous Symbol]                       0x08001af8   Section        0  tim.o(.text.MX_TIM1_Init)
    __arm_cp.0_0                             0x08001c00   Number         4  tim.o(.text.MX_TIM1_Init)
    __arm_cp.0_1                             0x08001c04   Number         4  tim.o(.text.MX_TIM1_Init)
    __arm_cp.0_3                             0x08001c08   Number         4  tim.o(.text.MX_TIM1_Init)
    __arm_cp.0_4                             0x08001c0c   Number         4  tim.o(.text.MX_TIM1_Init)
    [Anonymous Symbol]                       0x08001c10   Section        0  stm32g0xx_it.o(.text.NMI_Handler)
    OC1Config                                0x08001c15   Thumb Code   216  stm32g0xx_ll_tim.o(.text.OC1Config)
    [Anonymous Symbol]                       0x08001c14   Section        0  stm32g0xx_ll_tim.o(.text.OC1Config)
    OC2Config                                0x08001ced   Thumb Code   228  stm32g0xx_ll_tim.o(.text.OC2Config)
    [Anonymous Symbol]                       0x08001cec   Section        0  stm32g0xx_ll_tim.o(.text.OC2Config)
    __arm_cp.14_2                            0x08001dd0   Number         4  stm32g0xx_ll_tim.o(.text.OC2Config)
    OC3Config                                0x08001dd5   Thumb Code   224  stm32g0xx_ll_tim.o(.text.OC3Config)
    [Anonymous Symbol]                       0x08001dd4   Section        0  stm32g0xx_ll_tim.o(.text.OC3Config)
    __arm_cp.15_0                            0x08001eb4   Number         4  stm32g0xx_ll_tim.o(.text.OC3Config)
    __arm_cp.15_1                            0x08001eb8   Number         4  stm32g0xx_ll_tim.o(.text.OC3Config)
    __arm_cp.15_2                            0x08001ebc   Number         4  stm32g0xx_ll_tim.o(.text.OC3Config)
    OC4Config                                0x08001ec1   Thumb Code   180  stm32g0xx_ll_tim.o(.text.OC4Config)
    [Anonymous Symbol]                       0x08001ec0   Section        0  stm32g0xx_ll_tim.o(.text.OC4Config)
    __arm_cp.16_0                            0x08001f74   Number         4  stm32g0xx_ll_tim.o(.text.OC4Config)
    OC5Config                                0x08001f79   Thumb Code   160  stm32g0xx_ll_tim.o(.text.OC5Config)
    [Anonymous Symbol]                       0x08001f78   Section        0  stm32g0xx_ll_tim.o(.text.OC5Config)
    __arm_cp.17_0                            0x08002018   Number         4  stm32g0xx_ll_tim.o(.text.OC5Config)
    __arm_cp.17_1                            0x0800201c   Number         4  stm32g0xx_ll_tim.o(.text.OC5Config)
    __arm_cp.17_2                            0x08002020   Number         4  stm32g0xx_ll_tim.o(.text.OC5Config)
    __arm_cp.17_3                            0x08002024   Number         4  stm32g0xx_ll_tim.o(.text.OC5Config)
    __arm_cp.17_4                            0x08002028   Number         4  stm32g0xx_ll_tim.o(.text.OC5Config)
    OC6Config                                0x0800202d   Thumb Code   160  stm32g0xx_ll_tim.o(.text.OC6Config)
    [Anonymous Symbol]                       0x0800202c   Section        0  stm32g0xx_ll_tim.o(.text.OC6Config)
    __arm_cp.18_0                            0x080020cc   Number         4  stm32g0xx_ll_tim.o(.text.OC6Config)
    __arm_cp.18_1                            0x080020d0   Number         4  stm32g0xx_ll_tim.o(.text.OC6Config)
    __arm_cp.18_2                            0x080020d4   Number         4  stm32g0xx_ll_tim.o(.text.OC6Config)
    __arm_cp.18_3                            0x080020d8   Number         4  stm32g0xx_ll_tim.o(.text.OC6Config)
    __arm_cp.18_4                            0x080020dc   Number         4  stm32g0xx_ll_tim.o(.text.OC6Config)
    [Anonymous Symbol]                       0x080020e0   Section        0  stm32g0xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080020e2   Section        0  segger_rtt.o(.text.SEGGER_RTT_Init)
    [Anonymous Symbol]                       0x080020ec   Section        0  segger_rtt.o(.text.SEGGER_RTT_PutChar)
    [Anonymous Symbol]                       0x08002198   Section        0  segger_rtt.o(.text.SEGGER_RTT_Write)
    [Anonymous Symbol]                       0x080021e0   Section        0  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    __arm_cp.11_0                            0x0800228c   Number         4  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    [Anonymous Symbol]                       0x08002290   Section        0  segger_rtt_printf.o(.text.SEGGER_RTT_printf)
    [Anonymous Symbol]                       0x080022bc   Section        0  segger_rtt_printf.o(.text.SEGGER_RTT_vprintf)
    __arm_cp.0_0                             0x08002794   Number         4  segger_rtt_printf.o(.text.SEGGER_RTT_vprintf)
    [Anonymous Symbol]                       0x08002798   Section        0  stm32g0xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x0800279a   Section        0  stm32g0xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x0800279c   Section        0  main.o(.text.SystemClock_Config)
    __arm_cp.4_0                             0x0800281c   Number         4  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08002820   Section        0  system_stm32g0xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08002824   Section        0  tim.o(.text.TIM16_StartPWM)
    [Anonymous Symbol]                       0x08002844   Section        0  tim.o(.text.TIM16_StopPWM)
    __arm_cp.17_0                            0x08002864   Number         4  tim.o(.text.TIM16_StopPWM)
    [Anonymous Symbol]                       0x08002868   Section        0  tim.o(.text.TIM1_StartPWM)
    [Anonymous Symbol]                       0x08002888   Section        0  tim.o(.text.TIM1_StopPWM)
    __arm_cp.21_0                            0x080028a8   Number         4  tim.o(.text.TIM1_StopPWM)
    _DoInit                                  0x080028ad   Thumb Code   128  segger_rtt.o(.text._DoInit)
    [Anonymous Symbol]                       0x080028ac   Section        0  segger_rtt.o(.text._DoInit)
    __arm_cp.1_0                             0x0800292c   Number         4  segger_rtt.o(.text._DoInit)
    __arm_cp.1_1                             0x08002930   Number         4  segger_rtt.o(.text._DoInit)
    __arm_cp.1_2                             0x08002934   Number         4  segger_rtt.o(.text._DoInit)
    __arm_cp.1_3                             0x08002938   Number         4  segger_rtt.o(.text._DoInit)
    __arm_cp.1_4                             0x0800293c   Number         4  segger_rtt.o(.text._DoInit)
    _GetAvailWriteSpace                      0x08002941   Thumb Code    62  segger_rtt.o(.text._GetAvailWriteSpace)
    [Anonymous Symbol]                       0x08002940   Section        0  segger_rtt.o(.text._GetAvailWriteSpace)
    _PrintInt                                0x0800297f   Thumb Code   482  segger_rtt_printf.o(.text._PrintInt)
    [Anonymous Symbol]                       0x0800297e   Section        0  segger_rtt_printf.o(.text._PrintInt)
    _PrintUnsigned                           0x08002b61   Thumb Code   452  segger_rtt_printf.o(.text._PrintUnsigned)
    [Anonymous Symbol]                       0x08002b60   Section        0  segger_rtt_printf.o(.text._PrintUnsigned)
    __arm_cp.3_0                             0x08002d24   Number         4  segger_rtt_printf.o(.text._PrintUnsigned)
    _StoreChar                               0x08002d29   Thumb Code   116  segger_rtt_printf.o(.text._StoreChar)
    [Anonymous Symbol]                       0x08002d28   Section        0  segger_rtt_printf.o(.text._StoreChar)
    _WriteBlocking                           0x08002d9d   Thumb Code   224  segger_rtt.o(.text._WriteBlocking)
    [Anonymous Symbol]                       0x08002d9c   Section        0  segger_rtt.o(.text._WriteBlocking)
    _WriteNoCheck                            0x08002e7d   Thumb Code   132  segger_rtt.o(.text._WriteNoCheck)
    [Anonymous Symbol]                       0x08002e7c   Section        0  segger_rtt.o(.text._WriteNoCheck)
    __NVIC_EnableIRQ                         0x08002f01   Thumb Code    40  adc.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08002f00   Section        0  adc.o(.text.__NVIC_EnableIRQ)
    __arm_cp.4_0                             0x08002f28   Number         4  adc.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x08002f2d   Thumb Code   124  main.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08002f2c   Section        0  main.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08002fa9   Thumb Code   124  adc.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08002fa8   Section        0  adc.o(.text.__NVIC_SetPriority)
    __arm_cp.3_0                             0x08003024   Number         4  adc.o(.text.__NVIC_SetPriority)
    __arm_cp.3_1                             0x08003028   Number         4  adc.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x0800302c   Section        0  retarget_io.o(.text.fputc)
    __arm_cp.0_0                             0x08003058   Number         4  retarget_io.o(.text.fputc)
    [Anonymous Symbol]                       0x0800305c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x080030b8   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x080030bc   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x080030c0   Section        0  main.o(.text.stdout_putchar)
    i.__0printf                              0x080030d4   Section        0  printfa.o(i.__0printf)
    i.__ARM_clz                              0x080030f4   Section        0  depilogue.o(i.__ARM_clz)
    i.__scatterload_copy                     0x08003122   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08003130   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08003132   Section       14  handlers.o(i.__scatterload_zeroinit)
    _fp_digits                               0x08003141   Thumb Code   344  printfa.o(i._fp_digits)
    i._fp_digits                             0x08003140   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x080032b5   Thumb Code  1754  printfa.o(i._printf_core)
    i._printf_core                           0x080032b4   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x080039a1   Thumb Code    32  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x080039a0   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x080039c1   Thumb Code    44  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x080039c0   Section        0  printfa.o(i._printf_pre_padding)
    OFFSET_TAB_CCMRx                         0x080039ec   Data           9  tim.o(.rodata.OFFSET_TAB_CCMRx)
    [Anonymous Symbol]                       0x080039ec   Section        0  tim.o(.rodata.OFFSET_TAB_CCMRx)
    SHIFT_TAB_OCxx                           0x080039f5   Data           9  tim.o(.rodata.SHIFT_TAB_OCxx)
    [Anonymous Symbol]                       0x080039f5   Section        0  tim.o(.rodata.SHIFT_TAB_OCxx)
    _DoInit._aInitStr                        0x080039fe   Data          17  segger_rtt.o(.rodata._DoInit._aInitStr)
    [Anonymous Symbol]                       0x080039fe   Section        0  segger_rtt.o(.rodata._DoInit._aInitStr)
    _PrintUnsigned._aV2C                     0x08003a0f   Data          16  segger_rtt_printf.o(.rodata._PrintUnsigned._aV2C)
    [Anonymous Symbol]                       0x08003a0f   Section        0  segger_rtt_printf.o(.rodata._PrintUnsigned._aV2C)
    [Anonymous Symbol]                       0x08003a1f   Section        0  segger_rtt.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003a28   Section        0  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003a37   Section        0  stm32g0xx_it.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    _acDownBuffer                            0x200000b0   Data          16  segger_rtt.o(.bss._acDownBuffer)
    [Anonymous Symbol]                       0x200000b0   Section        0  segger_rtt.o(.bss._acDownBuffer)
    _acUpBuffer                              0x200000c0   Data        1024  segger_rtt.o(.bss._acUpBuffer)
    [Anonymous Symbol]                       0x200000c0   Section        0  segger_rtt.o(.bss._acUpBuffer)
    STACK                                    0x200004c0   Section     1024  startup_stm32g030xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_Size                           0x000000c0   Number         0  startup_stm32g030xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32g030xx.o(RESET)
    __Vectors_End                            0x080000c0   Data           0  startup_stm32g030xx.o(RESET)
    __main                                   0x080000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x080000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x080000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x080000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x080000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x080000c9   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x080000c9   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x080000d1   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x080000d1   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x080000d5   Thumb Code     8  startup_stm32g030xx.o(.text)
    DMA1_Ch4_5_DMAMUX1_OVR_IRQHandler        0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Channel1_IRQHandler                 0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    DMA1_Channel2_3_IRQHandler               0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI0_1_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI2_3_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    EXTI4_15_IRQHandler                      0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    FLASH_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C1_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    I2C2_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    RCC_IRQHandler                           0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    RTC_TAMP_IRQHandler                      0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI1_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    SPI2_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM14_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM16_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM17_IRQHandler                         0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM1_CC_IRQHandler                       0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    TIM3_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    USART1_IRQHandler                        0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    USART2_IRQHandler                        0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    WWDG_IRQHandler                          0x080000e7   Thumb Code     0  startup_stm32g030xx.o(.text)
    abs                                      0x080000f1   Thumb Code     8  siabs.o(.text)
    __aeabi_memcpy                           0x080000f9   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x080000f9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x080000f9   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0800011d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0800011d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0800011d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x0800012b   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x0800012b   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x0800012b   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x0800012f   Thumb Code    18  memseta.o(.text)
    __aeabi_fmul                             0x08000141   Thumb Code   122  fmul.o(.text)
    __aeabi_f2iz                             0x080001bb   Thumb Code    50  ffixi.o(.text)
    __aeabi_d2f                              0x080001ed   Thumb Code    56  d2f.o(.text)
    __aeabi_uidiv                            0x08000225   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x08000225   Thumb Code    62  uidiv_div0.o(.text)
    __aeabi_idiv                             0x08000265   Thumb Code     0  idiv_div0.o(.text)
    __aeabi_idivmod                          0x08000265   Thumb Code    74  idiv_div0.o(.text)
    __aeabi_uldivmod                         0x080002b5   Thumb Code    96  uldiv.o(.text)
    __I$use$fp                               0x08000315   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x08000315   Thumb Code    16  fepilogue.o(.text)
    _float_epilogue                          0x08000325   Thumb Code   114  fepilogue.o(.text)
    __aeabi_dadd                             0x08000399   Thumb Code   328  dadd.o(.text)
    __aeabi_dsub                             0x080004e1   Thumb Code    12  dadd.o(.text)
    __aeabi_drsub                            0x080004ed   Thumb Code    12  dadd.o(.text)
    __aeabi_dmul                             0x080004fd   Thumb Code   202  dmul.o(.text)
    __aeabi_ddiv                             0x080005cd   Thumb Code   234  ddiv.o(.text)
    __aeabi_d2ulz                            0x080006bd   Thumb Code    54  dfixul.o(.text)
    __aeabi_cdrcmple                         0x080006fd   Thumb Code    38  cdrcmple.o(.text)
    __scatterload                            0x08000725   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x08000725   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x08000749   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x08000749   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08000769   Thumb Code    34  llushr.o(.text)
    _ll_ushift_r                             0x08000769   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x0800078b   Thumb Code    38  llsshr.o(.text)
    _ll_sshift_r                             0x0800078b   Thumb Code     0  llsshr.o(.text)
    _double_round                            0x080007b1   Thumb Code    26  depilogue.o(.text)
    _double_epilogue                         0x080007cb   Thumb Code   164  depilogue.o(.text)
    ADC1_IRQHandler                          0x08000871   Thumb Code    72  stm32g0xx_it.o(.text.ADC1_IRQHandler)
    Activate_ADC                             0x080008c1   Thumb Code   172  adc.o(.text.Activate_ADC)
    HardFault_Handler                        0x08000979   Thumb Code     4  stm32g0xx_it.o(.text.HardFault_Handler)
    LL_ADC_Init                              0x08000a41   Thumb Code    92  stm32g0xx_ll_adc.o(.text.LL_ADC_Init)
    LL_ADC_REG_Init                          0x08000b3d   Thumb Code   196  stm32g0xx_ll_adc.o(.text.LL_ADC_REG_Init)
    LL_GPIO_Init                             0x08000e5d   Thumb Code   184  stm32g0xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_Init1msTick                           0x08001055   Thumb Code    20  stm32g0xx_ll_utils.o(.text.LL_Init1msTick)
    LL_SetSystemCoreClock                    0x0800117d   Thumb Code    16  stm32g0xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_BDTR_Init                         0x08001191   Thumb Code   220  stm32g0xx_ll_tim.o(.text.LL_TIM_BDTR_Init)
    LL_TIM_Init                              0x08001319   Thumb Code   200  stm32g0xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_Init                           0x0800169d   Thumb Code   176  stm32g0xx_ll_tim.o(.text.LL_TIM_OC_Init)
    MX_ADC1_Init                             0x08001839   Thumb Code   372  adc.o(.text.MX_ADC1_Init)
    MX_GPIO_Init                             0x080019d1   Thumb Code    76  gpio.o(.text.MX_GPIO_Init)
    MX_TIM16_Init                            0x08001a1d   Thumb Code   220  tim.o(.text.MX_TIM16_Init)
    MX_TIM1_Init                             0x08001af9   Thumb Code   264  tim.o(.text.MX_TIM1_Init)
    NMI_Handler                              0x08001c11   Thumb Code     4  stm32g0xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x080020e1   Thumb Code     2  stm32g0xx_it.o(.text.PendSV_Handler)
    SEGGER_RTT_Init                          0x080020e3   Thumb Code     8  segger_rtt.o(.text.SEGGER_RTT_Init)
    SEGGER_RTT_PutChar                       0x080020ed   Thumb Code   172  segger_rtt.o(.text.SEGGER_RTT_PutChar)
    SEGGER_RTT_Write                         0x08002199   Thumb Code    72  segger_rtt.o(.text.SEGGER_RTT_Write)
    SEGGER_RTT_WriteNoLock                   0x080021e1   Thumb Code   172  segger_rtt.o(.text.SEGGER_RTT_WriteNoLock)
    SEGGER_RTT_printf                        0x08002291   Thumb Code    44  segger_rtt_printf.o(.text.SEGGER_RTT_printf)
    SEGGER_RTT_vprintf                       0x080022bd   Thumb Code  1240  segger_rtt_printf.o(.text.SEGGER_RTT_vprintf)
    SVC_Handler                              0x08002799   Thumb Code     2  stm32g0xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x0800279b   Thumb Code     2  stm32g0xx_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x0800279d   Thumb Code   128  main.o(.text.SystemClock_Config)
    SystemInit                               0x08002821   Thumb Code     2  system_stm32g0xx.o(.text.SystemInit)
    TIM16_StartPWM                           0x08002825   Thumb Code    32  tim.o(.text.TIM16_StartPWM)
    TIM16_StopPWM                            0x08002845   Thumb Code    32  tim.o(.text.TIM16_StopPWM)
    TIM1_StartPWM                            0x08002869   Thumb Code    32  tim.o(.text.TIM1_StartPWM)
    TIM1_StopPWM                             0x08002889   Thumb Code    32  tim.o(.text.TIM1_StopPWM)
    fputc                                    0x0800302d   Thumb Code    44  retarget_io.o(.text.fputc)
    main                                     0x0800305d   Thumb Code    92  main.o(.text.main)
    stdout_putchar                           0x080030c1   Thumb Code    20  main.o(.text.stdout_putchar)
    __0printf                                0x080030d5   Thumb Code    24  printfa.o(i.__0printf)
    __1printf                                0x080030d5   Thumb Code     0  printfa.o(i.__0printf)
    __2printf                                0x080030d5   Thumb Code     0  printfa.o(i.__0printf)
    __c89printf                              0x080030d5   Thumb Code     0  printfa.o(i.__0printf)
    printf                                   0x080030d5   Thumb Code     0  printfa.o(i.__0printf)
    __ARM_clz                                0x080030f5   Thumb Code    46  depilogue.o(i.__ARM_clz)
    __scatterload_copy                       0x08003123   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08003131   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08003133   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x08003a54   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003a74   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    SystemCoreClock                          0x20000004   Data           4  system_stm32g0xx.o(.data.SystemCoreClock)
    _SEGGER_RTT                              0x20000008   Data         168  segger_rtt.o(.bss._SEGGER_RTT)
    __initial_sp                             0x200008c0   Data           0  startup_stm32g030xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000c1

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003a80, Max: 0x00008000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003a74, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000c0   Data   RO            3    RESET               startup_stm32g030xx.o
    0x080000c0   0x080000c0   0x00000000   Code   RO          727  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x080000c0   0x080000c0   0x00000004   Code   RO          788    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x080000c4   0x080000c4   0x00000004   Code   RO          791    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          793    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x080000c8   0x080000c8   0x00000000   Code   RO          795    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x080000c8   0x080000c8   0x00000008   Code   RO          796    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          798    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x080000d0   0x080000d0   0x00000000   Code   RO          800    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x080000d0   0x080000d0   0x00000004   Code   RO          789    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x080000d4   0x080000d4   0x0000001c   Code   RO            4    .text               startup_stm32g030xx.o
    0x080000f0   0x080000f0   0x00000008   Code   RO          742    .text               mc_p.l(siabs.o)
    0x080000f8   0x080000f8   0x00000024   Code   RO          746    .text               mc_p.l(memcpya.o)
    0x0800011c   0x0800011c   0x00000024   Code   RO          748    .text               mc_p.l(memseta.o)
    0x08000140   0x08000140   0x0000007a   Code   RO          782    .text               mf_p.l(fmul.o)
    0x080001ba   0x080001ba   0x00000032   Code   RO          784    .text               mf_p.l(ffixi.o)
    0x080001ec   0x080001ec   0x00000038   Code   RO          786    .text               mf_p.l(d2f.o)
    0x08000224   0x08000224   0x0000003e   Code   RO          804    .text               mc_p.l(uidiv_div0.o)
    0x08000262   0x08000262   0x00000002   PAD
    0x08000264   0x08000264   0x00000050   Code   RO          806    .text               mc_p.l(idiv_div0.o)
    0x080002b4   0x080002b4   0x00000060   Code   RO          810    .text               mc_p.l(uldiv.o)
    0x08000314   0x08000314   0x00000000   Code   RO          812    .text               mc_p.l(iusefp.o)
    0x08000314   0x08000314   0x00000082   Code   RO          813    .text               mf_p.l(fepilogue.o)
    0x08000396   0x08000396   0x00000002   PAD
    0x08000398   0x08000398   0x00000164   Code   RO          815    .text               mf_p.l(dadd.o)
    0x080004fc   0x080004fc   0x000000d0   Code   RO          817    .text               mf_p.l(dmul.o)
    0x080005cc   0x080005cc   0x000000f0   Code   RO          819    .text               mf_p.l(ddiv.o)
    0x080006bc   0x080006bc   0x00000040   Code   RO          821    .text               mf_p.l(dfixul.o)
    0x080006fc   0x080006fc   0x00000028   Code   RO          823    .text               mf_p.l(cdrcmple.o)
    0x08000724   0x08000724   0x00000024   Code   RO          825    .text               mc_p.l(init.o)
    0x08000748   0x08000748   0x00000020   Code   RO          827    .text               mc_p.l(llshl.o)
    0x08000768   0x08000768   0x00000022   Code   RO          829    .text               mc_p.l(llushr.o)
    0x0800078a   0x0800078a   0x00000026   Code   RO          831    .text               mc_p.l(llsshr.o)
    0x080007b0   0x080007b0   0x000000be   Code   RO          833    .text               mf_p.l(depilogue.o)
    0x0800086e   0x0800086e   0x00000002   PAD
    0x08000870   0x08000870   0x00000050   Code   RO          305    .text.ADC1_IRQHandler  stm32g0xx_it.o
    0x080008c0   0x080008c0   0x000000b8   Code   RO          219    .text.Activate_ADC  adc.o
    0x08000978   0x08000978   0x00000004   Code   RO          297    .text.HardFault_Handler  stm32g0xx_it.o
    0x0800097c   0x0800097c   0x00000010   Code   RO          193    .text.LL_ADC_ClearFlag_CCRDY  adc.o
    0x0800098c   0x0800098c   0x00000048   Code   RO          211    .text.LL_ADC_ConfigAnalogWDThresholds  adc.o
    0x080009d4   0x080009d4   0x00000012   Code   RO          203    .text.LL_ADC_DisableIT_EOC  adc.o
    0x080009e6   0x080009e6   0x00000012   Code   RO          205    .text.LL_ADC_DisableIT_EOS  adc.o
    0x080009f8   0x080009f8   0x00000018   Code   RO          231    .text.LL_ADC_Enable  adc.o
    0x08000a10   0x08000a10   0x00000012   Code   RO          213    .text.LL_ADC_EnableIT_AWD1  adc.o
    0x08000a22   0x08000a22   0x00000002   PAD
    0x08000a24   0x08000a24   0x0000001c   Code   RO          207    .text.LL_ADC_EnableInternalRegulator  adc.o
    0x08000a40   0x08000a40   0x00000060   Code   RO          466    .text.LL_ADC_Init   stm32g0xx_ll_adc.o
    0x08000aa0   0x08000aa0   0x00000010   Code   RO          233    .text.LL_ADC_IsActiveFlag_ADRDY  adc.o
    0x08000ab0   0x08000ab0   0x00000010   Code   RO          307    .text.LL_ADC_IsActiveFlag_AWD1  stm32g0xx_it.o
    0x08000ac0   0x08000ac0   0x00000014   Code   RO          191    .text.LL_ADC_IsActiveFlag_CCRDY  adc.o
    0x08000ad4   0x08000ad4   0x00000012   Code   RO          311    .text.LL_ADC_IsActiveFlag_EOC  stm32g0xx_it.o
    0x08000ae6   0x08000ae6   0x00000014   Code   RO          229    .text.LL_ADC_IsCalibrationOnGoing  adc.o
    0x08000afa   0x08000afa   0x00000010   Code   RO          221    .text.LL_ADC_IsEnabled  adc.o
    0x08000b0a   0x08000b0a   0x00000010   Code   RO          446    .text.LL_ADC_IsEnabled  stm32g0xx_ll_adc.o
    0x08000b1a   0x08000b1a   0x00000010   Code   RO          223    .text.LL_ADC_REG_GetDMATransfer  adc.o
    0x08000b2a   0x08000b2a   0x00000012   Code   RO          472    .text.LL_ADC_REG_GetSequencerConfigurable  stm32g0xx_ll_adc.o
    0x08000b3c   0x08000b3c   0x000000c8   Code   RO          470    .text.LL_ADC_REG_Init  stm32g0xx_ll_adc.o
    0x08000c04   0x08000c04   0x00000014   Code   RO          309    .text.LL_ADC_REG_ReadConversionData12  stm32g0xx_it.o
    0x08000c18   0x08000c18   0x0000001a   Code   RO          225    .text.LL_ADC_REG_SetDMATransfer  adc.o
    0x08000c32   0x08000c32   0x0000001c   Code   RO          189    .text.LL_ADC_REG_SetSequencerConfigurable  adc.o
    0x08000c4e   0x08000c4e   0x00000014   Code   RO          474    .text.LL_ADC_REG_SetSequencerLength  stm32g0xx_ll_adc.o
    0x08000c62   0x08000c62   0x0000002e   Code   RO          215    .text.LL_ADC_REG_SetSequencerRanks  adc.o
    0x08000c90   0x08000c90   0x0000001c   Code   RO          127    .text.LL_ADC_REG_StartConversion  main.o
    0x08000cac   0x08000cac   0x00000054   Code   RO          209    .text.LL_ADC_SetAnalogWDMonitChannels  adc.o
    0x08000d00   0x08000d00   0x00000028   Code   RO          217    .text.LL_ADC_SetChannelSamplingTime  adc.o
    0x08000d28   0x08000d28   0x0000001c   Code   RO          199    .text.LL_ADC_SetCommonPathInternalCh  adc.o
    0x08000d44   0x08000d44   0x0000001a   Code   RO          195    .text.LL_ADC_SetOverSamplingScope  adc.o
    0x08000d5e   0x08000d5e   0x00000026   Code   RO          201    .text.LL_ADC_SetSamplingTimeCommonChannels  adc.o
    0x08000d84   0x08000d84   0x0000001c   Code   RO          197    .text.LL_ADC_SetTriggerFrequencyMode  adc.o
    0x08000da0   0x08000da0   0x0000001a   Code   RO          227    .text.LL_ADC_StartCalibration  adc.o
    0x08000dba   0x08000dba   0x00000002   PAD
    0x08000dbc   0x08000dbc   0x00000020   Code   RO          121    .text.LL_APB1_GRP1_EnableClock  main.o
    0x08000ddc   0x08000ddc   0x0000001c   Code   RO          119    .text.LL_APB2_GRP1_EnableClock  main.o
    0x08000df8   0x08000df8   0x0000001c   Code   RO          181    .text.LL_APB2_GRP1_EnableClock  adc.o
    0x08000e14   0x08000e14   0x00000020   Code   RO          244    .text.LL_APB2_GRP1_EnableClock  tim.o
    0x08000e34   0x08000e34   0x0000000c   Code   RO          131    .text.LL_FLASH_GetLatency  main.o
    0x08000e40   0x08000e40   0x0000001c   Code   RO          129    .text.LL_FLASH_SetLatency  main.o
    0x08000e5c   0x08000e5c   0x000000b8   Code   RO          415    .text.LL_GPIO_Init  stm32g0xx_ll_gpio.o
    0x08000f14   0x08000f14   0x00000010   Code   RO          170    .text.LL_GPIO_ResetOutputPin  gpio.o
    0x08000f24   0x08000f24   0x00000026   Code   RO          423    .text.LL_GPIO_SetAFPin_0_7  stm32g0xx_ll_gpio.o
    0x08000f4a   0x08000f4a   0x00000028   Code   RO          425    .text.LL_GPIO_SetAFPin_8_15  stm32g0xx_ll_gpio.o
    0x08000f72   0x08000f72   0x00000024   Code   RO          427    .text.LL_GPIO_SetPinMode  stm32g0xx_ll_gpio.o
    0x08000f96   0x08000f96   0x0000001e   Code   RO          419    .text.LL_GPIO_SetPinOutputType  stm32g0xx_ll_gpio.o
    0x08000fb4   0x08000fb4   0x00000024   Code   RO          421    .text.LL_GPIO_SetPinPull  stm32g0xx_ll_gpio.o
    0x08000fd8   0x08000fd8   0x00000024   Code   RO          417    .text.LL_GPIO_SetPinSpeed  stm32g0xx_ll_gpio.o
    0x08000ffc   0x08000ffc   0x0000001c   Code   RO          168    .text.LL_IOP_GRP1_EnableClock  gpio.o
    0x08001018   0x08001018   0x0000001c   Code   RO          183    .text.LL_IOP_GRP1_EnableClock  adc.o
    0x08001034   0x08001034   0x00000020   Code   RO          260    .text.LL_IOP_GRP1_EnableClock  tim.o
    0x08001054   0x08001054   0x00000014   Code   RO          321    .text.LL_Init1msTick  stm32g0xx_ll_utils.o
    0x08001068   0x08001068   0x00000034   Code   RO          323    .text.LL_InitTick   stm32g0xx_ll_utils.o
    0x0800109c   0x0800109c   0x0000000c   Code   RO          149    .text.LL_RCC_GetSysClkSource  main.o
    0x080010a8   0x080010a8   0x00000010   Code   RO          133    .text.LL_RCC_HSI_Enable  main.o
    0x080010b8   0x080010b8   0x00000010   Code   RO          135    .text.LL_RCC_HSI_IsReady  main.o
    0x080010c8   0x080010c8   0x00000030   Code   RO          137    .text.LL_RCC_PLL_ConfigDomain_SYS  main.o
    0x080010f8   0x080010f8   0x00000010   Code   RO          139    .text.LL_RCC_PLL_Enable  main.o
    0x08001108   0x08001108   0x00000014   Code   RO          141    .text.LL_RCC_PLL_EnableDomain_SYS  main.o
    0x0800111c   0x0800111c   0x00000014   Code   RO          143    .text.LL_RCC_PLL_IsReady  main.o
    0x08001130   0x08001130   0x00000018   Code   RO          145    .text.LL_RCC_SetAHBPrescaler  main.o
    0x08001148   0x08001148   0x00000018   Code   RO          151    .text.LL_RCC_SetAPB1Prescaler  main.o
    0x08001160   0x08001160   0x0000001c   Code   RO          147    .text.LL_RCC_SetSysClkSource  main.o
    0x0800117c   0x0800117c   0x00000014   Code   RO          327    .text.LL_SetSystemCoreClock  stm32g0xx_ll_utils.o
    0x08001190   0x08001190   0x000000dc   Code   RO          677    .text.LL_TIM_BDTR_Init  stm32g0xx_ll_tim.o
    0x0800126c   0x0800126c   0x00000014   Code   RO          278    .text.LL_TIM_CC_DisableChannel  tim.o
    0x08001280   0x08001280   0x00000014   Code   RO          268    .text.LL_TIM_CC_EnableChannel  tim.o
    0x08001294   0x08001294   0x00000014   Code   RO          282    .text.LL_TIM_DisableAllOutputs  tim.o
    0x080012a8   0x080012a8   0x00000012   Code   RO          280    .text.LL_TIM_DisableCounter  tim.o
    0x080012ba   0x080012ba   0x00000012   Code   RO          258    .text.LL_TIM_DisableMasterSlaveMode  tim.o
    0x080012cc   0x080012cc   0x00000012   Code   RO          246    .text.LL_TIM_EnableARRPreload  tim.o
    0x080012de   0x080012de   0x00000014   Code   RO          272    .text.LL_TIM_EnableAllOutputs  tim.o
    0x080012f2   0x080012f2   0x00000012   Code   RO          270    .text.LL_TIM_EnableCounter  tim.o
    0x08001304   0x08001304   0x00000012   Code   RO          633    .text.LL_TIM_GenerateEvent_UPDATE  stm32g0xx_ll_tim.o
    0x08001316   0x08001316   0x00000002   PAD
    0x08001318   0x08001318   0x000000dc   Code   RO          625    .text.LL_TIM_Init   stm32g0xx_ll_tim.o
    0x080013f4   0x080013f4   0x000000e0   Code   RO          252    .text.LL_TIM_OC_DisableFast  tim.o
    0x080014d4   0x080014d4   0x000000e0   Code   RO          264    .text.LL_TIM_OC_EnableFast  tim.o
    0x080015b4   0x080015b4   0x000000e8   Code   RO          250    .text.LL_TIM_OC_EnablePreload  tim.o
    0x0800169c   0x0800169c   0x000000b0   Code   RO          637    .text.LL_TIM_OC_Init  stm32g0xx_ll_tim.o
    0x0800174c   0x0800174c   0x00000010   Code   RO          679    .text.LL_TIM_OC_SetCompareCH1  stm32g0xx_ll_tim.o
    0x0800175c   0x0800175c   0x00000010   Code   RO          673    .text.LL_TIM_OC_SetCompareCH2  stm32g0xx_ll_tim.o
    0x0800176c   0x0800176c   0x00000010   Code   RO          681    .text.LL_TIM_OC_SetCompareCH3  stm32g0xx_ll_tim.o
    0x0800177c   0x0800177c   0x00000010   Code   RO          683    .text.LL_TIM_OC_SetCompareCH4  stm32g0xx_ll_tim.o
    0x0800178c   0x0800178c   0x00000014   Code   RO          685    .text.LL_TIM_OC_SetCompareCH5  stm32g0xx_ll_tim.o
    0x080017a0   0x080017a0   0x00000010   Code   RO          687    .text.LL_TIM_OC_SetCompareCH6  stm32g0xx_ll_tim.o
    0x080017b0   0x080017b0   0x00000010   Code   RO          627    .text.LL_TIM_SetAutoReload  stm32g0xx_ll_tim.o
    0x080017c0   0x080017c0   0x00000020   Code   RO          248    .text.LL_TIM_SetClockSource  tim.o
    0x080017e0   0x080017e0   0x00000010   Code   RO          629    .text.LL_TIM_SetPrescaler  stm32g0xx_ll_tim.o
    0x080017f0   0x080017f0   0x00000010   Code   RO          631    .text.LL_TIM_SetRepetitionCounter  stm32g0xx_ll_tim.o
    0x08001800   0x08001800   0x0000001a   Code   RO          254    .text.LL_TIM_SetTriggerOutput  tim.o
    0x0800181a   0x0800181a   0x0000001c   Code   RO          256    .text.LL_TIM_SetTriggerOutput2  tim.o
    0x08001836   0x08001836   0x00000002   PAD
    0x08001838   0x08001838   0x00000198   Code   RO          179    .text.MX_ADC1_Init  adc.o
    0x080019d0   0x080019d0   0x0000004c   Code   RO          166    .text.MX_GPIO_Init  gpio.o
    0x08001a1c   0x08001a1c   0x000000dc   Code   RO          262    .text.MX_TIM16_Init  tim.o
    0x08001af8   0x08001af8   0x00000118   Code   RO          242    .text.MX_TIM1_Init  tim.o
    0x08001c10   0x08001c10   0x00000004   Code   RO          295    .text.NMI_Handler   stm32g0xx_it.o
    0x08001c14   0x08001c14   0x000000d8   Code   RO          639    .text.OC1Config     stm32g0xx_ll_tim.o
    0x08001cec   0x08001cec   0x000000e8   Code   RO          641    .text.OC2Config     stm32g0xx_ll_tim.o
    0x08001dd4   0x08001dd4   0x000000ec   Code   RO          643    .text.OC3Config     stm32g0xx_ll_tim.o
    0x08001ec0   0x08001ec0   0x000000b8   Code   RO          645    .text.OC4Config     stm32g0xx_ll_tim.o
    0x08001f78   0x08001f78   0x000000b4   Code   RO          647    .text.OC5Config     stm32g0xx_ll_tim.o
    0x0800202c   0x0800202c   0x000000b4   Code   RO          649    .text.OC6Config     stm32g0xx_ll_tim.o
    0x080020e0   0x080020e0   0x00000002   Code   RO          301    .text.PendSV_Handler  stm32g0xx_it.o
    0x080020e2   0x080020e2   0x00000008   Code   RO           73    .text.SEGGER_RTT_Init  segger_rtt.o
    0x080020ea   0x080020ea   0x00000002   PAD
    0x080020ec   0x080020ec   0x000000ac   Code   RO           45    .text.SEGGER_RTT_PutChar  segger_rtt.o
    0x08002198   0x08002198   0x00000048   Code   RO           37    .text.SEGGER_RTT_Write  segger_rtt.o
    0x080021e0   0x080021e0   0x000000b0   Code   RO           33    .text.SEGGER_RTT_WriteNoLock  segger_rtt.o
    0x08002290   0x08002290   0x0000002c   Code   RO          107    .text.SEGGER_RTT_printf  segger_rtt_printf.o
    0x080022bc   0x080022bc   0x000004dc   Code   RO           99    .text.SEGGER_RTT_vprintf  segger_rtt_printf.o
    0x08002798   0x08002798   0x00000002   Code   RO          299    .text.SVC_Handler   stm32g0xx_it.o
    0x0800279a   0x0800279a   0x00000002   Code   RO          303    .text.SysTick_Handler  stm32g0xx_it.o
    0x0800279c   0x0800279c   0x00000084   Code   RO          125    .text.SystemClock_Config  main.o
    0x08002820   0x08002820   0x00000002   Code   RO          696    .text.SystemInit    system_stm32g0xx.o
    0x08002822   0x08002822   0x00000002   PAD
    0x08002824   0x08002824   0x00000020   Code   RO          266    .text.TIM16_StartPWM  tim.o
    0x08002844   0x08002844   0x00000024   Code   RO          276    .text.TIM16_StopPWM  tim.o
    0x08002868   0x08002868   0x00000020   Code   RO          274    .text.TIM1_StartPWM  tim.o
    0x08002888   0x08002888   0x00000024   Code   RO          284    .text.TIM1_StopPWM  tim.o
    0x080028ac   0x080028ac   0x00000094   Code   RO           13    .text._DoInit       segger_rtt.o
    0x08002940   0x08002940   0x0000003e   Code   RO           27    .text._GetAvailWriteSpace  segger_rtt.o
    0x0800297e   0x0800297e   0x000001e2   Code   RO          103    .text._PrintInt     segger_rtt_printf.o
    0x08002b60   0x08002b60   0x000001c8   Code   RO          105    .text._PrintUnsigned  segger_rtt_printf.o
    0x08002d28   0x08002d28   0x00000074   Code   RO          101    .text._StoreChar    segger_rtt_printf.o
    0x08002d9c   0x08002d9c   0x000000e0   Code   RO           31    .text._WriteBlocking  segger_rtt.o
    0x08002e7c   0x08002e7c   0x00000084   Code   RO           29    .text._WriteNoCheck  segger_rtt.o
    0x08002f00   0x08002f00   0x0000002c   Code   RO          187    .text.__NVIC_EnableIRQ  adc.o
    0x08002f2c   0x08002f2c   0x0000007c   Code   RO          123    .text.__NVIC_SetPriority  main.o
    0x08002fa8   0x08002fa8   0x00000084   Code   RO          185    .text.__NVIC_SetPriority  adc.o
    0x0800302c   0x0800302c   0x00000030   Code   RO          710    .text.fputc         retarget_io.o
    0x0800305c   0x0800305c   0x00000064   Code   RO          117    .text.main          main.o
    0x080030c0   0x080030c0   0x00000014   Code   RO          153    .text.stdout_putchar  main.o
    0x080030d4   0x080030d4   0x00000020   Code   RO          755    i.__0printf         mc_p.l(printfa.o)
    0x080030f4   0x080030f4   0x0000002e   Code   RO          835    i.__ARM_clz         mf_p.l(depilogue.o)
    0x08003122   0x08003122   0x0000000e   Code   RO          839    i.__scatterload_copy  mc_p.l(handlers.o)
    0x08003130   0x08003130   0x00000002   Code   RO          840    i.__scatterload_null  mc_p.l(handlers.o)
    0x08003132   0x08003132   0x0000000e   Code   RO          841    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x08003140   0x08003140   0x00000174   Code   RO          762    i._fp_digits        mc_p.l(printfa.o)
    0x080032b4   0x080032b4   0x000006ec   Code   RO          763    i._printf_core      mc_p.l(printfa.o)
    0x080039a0   0x080039a0   0x00000020   Code   RO          764    i._printf_post_padding  mc_p.l(printfa.o)
    0x080039c0   0x080039c0   0x0000002c   Code   RO          765    i._printf_pre_padding  mc_p.l(printfa.o)
    0x080039ec   0x080039ec   0x00000009   Data   RO          286    .rodata.OFFSET_TAB_CCMRx  tim.o
    0x080039f5   0x080039f5   0x00000009   Data   RO          287    .rodata.SHIFT_TAB_OCxx  tim.o
    0x080039fe   0x080039fe   0x00000011   Data   RO           88    .rodata._DoInit._aInitStr  segger_rtt.o
    0x08003a0f   0x08003a0f   0x00000010   Data   RO          109    .rodata._PrintUnsigned._aV2C  segger_rtt_printf.o
    0x08003a1f   0x08003a1f   0x00000009   Data   RO           89    .rodata.str1.1      segger_rtt.o
    0x08003a28   0x08003a28   0x0000000f   Data   RO          157    .rodata.str1.1      main.o
    0x08003a37   0x08003a37   0x0000001d   Data   RO          313    .rodata.str1.1      stm32g0xx_it.o
    0x08003a54   0x08003a54   0x00000020   Data   RO          838    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08003a78, Size: 0x000008c0, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003a78   0x00000004   Data   RW          734    .data               mc_p.l(stdout.o)
    0x20000004   0x08003a7c   0x00000004   Data   RW          700    .data.SystemCoreClock  system_stm32g0xx.o
    0x20000008        -       0x000000a8   Zero   RW           85    .bss._SEGGER_RTT    segger_rtt.o
    0x200000b0        -       0x00000010   Zero   RW           91    .bss._acDownBuffer  segger_rtt.o
    0x200000c0        -       0x00000400   Zero   RW           90    .bss._acUpBuffer    segger_rtt.o
    0x200004c0        -       0x00000400   Zero   RW            1    STACK               startup_stm32g030xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1476         76          0          0          0       8117   adc.o
       120          0          0          0          0       2108   gpio.o
       728         40         15          0          0       5746   main.o
        48          4          0          0          0       1637   retarget_io.o
       994         24         26          0       1208      13840   segger_rtt.o
      2342        400         16          0          0       4088   segger_rtt_printf.o
        28          8        192          0       1024        600   startup_stm32g030xx.o
       148         12         29          0          0       2136   stm32g0xx_it.o
       350          8          0          0          0       5598   stm32g0xx_ll_adc.o
       400          0          0          0          0       3786   stm32g0xx_ll_gpio.o
      2010         80          0          0          0      10299   stm32g0xx_ll_tim.o
        92         16          0          0          0       6321   stm32g0xx_ll_utils.o
         2          0          0          4          0       1855   system_stm32g0xx.o
      1618         44         18          0          0       6603   tim.o

    ----------------------------------------------------------------------
     10368        712        328          4       2232      72734   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        12          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        80          6          0          0          0         72   idiv_div0.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        32          0          0          0          0         68   llshl.o
        38          0          0          0          0         68   llsshr.o
        34          0          0          0          0         68   llushr.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
      2252         98          0          0          0        412   printfa.o
         8          0          0          0          0         60   siabs.o
         0          0          0          4          0          0   stdout.o
        62          0          0          0          0         72   uidiv_div0.o
        96          0          0          0          0         84   uldiv.o
        40          2          0          0          0         68   cdrcmple.o
        56          0          0          0          0         68   d2f.o
       356          4          0          0          0        140   dadd.o
       240          6          0          0          0         84   ddiv.o
       236          0          0          0          0        216   depilogue.o
        64         10          0          0          0         68   dfixul.o
       208          6          0          0          0         88   dmul.o
       130          0          0          0          0        144   fepilogue.o
        50          0          0          0          0         60   ffixi.o
       122          0          0          0          0         72   fmul.o

    ----------------------------------------------------------------------
      4268        148          0          4          0       2140   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      2760        120          0          4          0       1132   mc_p.l
      1502         28          0          0          0       1008   mf_p.l

    ----------------------------------------------------------------------
      4268        148          0          4          0       2140   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14636        860        328          8       2232      73766   Grand Totals
     14636        860        328          8       2232      73766   ELF Image Totals
     14636        860        328          8          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14964 (  14.61kB)
    Total RW  Size (RW Data + ZI Data)              2240 (   2.19kB)
    Total ROM Size (Code + RO Data + RW Data)      14972 (  14.62kB)

==============================================================================

